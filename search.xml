<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>AjaxStudy</title>
      <link href="/2024/02/23/AjaxStudy/"/>
      <url>/2024/02/23/AjaxStudy/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-Ajax概述"><a href="#第一章-Ajax概述" class="headerlink" title="第一章 Ajax概述"></a>第一章 Ajax概述</h1><ul><li>AJAX（Asynchronous Javascript And Xml）AJAX是可以发送异步请求的。也就是说，在同一个浏览器页面当中，可以发送多个ajax请求，这些ajax请求之间不需要等待，是并发的</li><li>AJAX是JavaScript代码，写在script标签里</li><li>用来实现网页的局部刷新</li></ul><h1 id="第二章-Ajax基本代码"><a href="#第二章-Ajax基本代码" class="headerlink" title="第二章 Ajax基本代码"></a>第二章 Ajax基本代码</h1><ul><li>发送get请求</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>ajax get请求<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;btn&quot;</span>).<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//获取xhr对象</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//绑定回调函数</span></span></span><br><span class="line"><span class="language-javascript">            xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">readyState</span> == <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//ajax结束</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">status</span> == <span class="number">200</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="comment">//http请求正常</span></span></span><br><span class="line"><span class="language-javascript">                        <span class="comment">//这个responseText不管服务器端返回的是什么，都当作普通文本处理</span></span></span><br><span class="line"><span class="language-javascript">                        <span class="comment">//innerHTML是js的语法，可以设置元素内部的html代码，当作html解释</span></span></span><br><span class="line"><span class="language-javascript">                        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;myDiv&quot;</span>).<span class="property">innerHTML</span> = <span class="variable language_">this</span>.<span class="property">responseText</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="title function_">alert</span>(<span class="string">&quot;HTTP响应码：&quot;</span>+<span class="variable language_">this</span>.<span class="property">status</span>)</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//获取通道</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//发送文本框的内容到服务器，因为是get请求，方法是拼url</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> username = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;username&quot;</span>).<span class="property">value</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> userpwd = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;userpwd&quot;</span>).<span class="property">value</span></span></span><br><span class="line"><span class="language-javascript">            xhr.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;/ajax/yy?username=&quot;</span>+username+<span class="string">&quot;&amp;userpwd=&quot;</span>+userpwd, <span class="literal">true</span>)</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//发送请求</span></span></span><br><span class="line"><span class="language-javascript">            xhr.<span class="title function_">send</span>()</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;userpwd&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>发送ajax请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;myDiv&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>发送post请求</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>ajax post请求<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;myBtn&quot;</span>).<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//创建核心对象</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//回调函数</span></span></span><br><span class="line"><span class="language-javascript">            xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">readyState</span> == <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">status</span> == <span class="number">200</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;myDiv&quot;</span>).<span class="property">innerHTML</span> = <span class="variable language_">this</span>.<span class="property">responseText</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="title function_">alert</span>(<span class="variable language_">this</span>.<span class="property">status</span>)</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//开启通道</span></span></span><br><span class="line"><span class="language-javascript">            xhr.<span class="title function_">open</span>(<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;/ajax/zz&quot;</span>, <span class="literal">true</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//post请求头，以表单的形式（固定格式）</span></span></span><br><span class="line"><span class="language-javascript">            xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//发送，依然是拼接字符串</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> username = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;username&quot;</span>).<span class="property">value</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> userpwd = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;userpwd&quot;</span>).<span class="property">value</span></span></span><br><span class="line"><span class="language-javascript">            xhr.<span class="title function_">send</span>(<span class="string">&quot;username=&quot;</span>+username+<span class="string">&quot;&amp;userpwd=&quot;</span>+userpwd)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">账号：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;userpwd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;myBtn&quot;</span>&gt;</span>发送一个post请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;myDiv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;form enctype=&quot;application/x-www-form-urlencoded&quot;&gt;&lt;/form&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>书写的具体步骤</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>ajax get请求<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//当页面加载完毕，回调函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//注意这里是onclick属性，不是onclick方法</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//按钮被点击，回调函数</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;helloBtn&quot;</span>).<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//创建ajax的核心对象</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//当readystate状态改变时，回调函数</span></span></span><br><span class="line"><span class="language-javascript">            xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//以下用this代替了xhr</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//0-1</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//1-2</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//2-3</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//3-4</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//控制台输出1234</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//xhr的状态码</span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">readyState</span>)</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//当控制台输出4时表示响应结束，即使是404也照样结束</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">readyState</span> == <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//其实是xhr.readyState</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;响应结束了&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//这时还会有一个HTTP状态码</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//200成功</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//404资源找不到</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//500服务器错误</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//控制台输出HTTP的状态码</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;HTTP状态码&quot;</span>+<span class="variable language_">this</span>.<span class="property">status</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">status</span> == <span class="number">404</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="title function_">alert</span>(<span class="string">&quot;对不起，你访问的资源的不存在，请检查请求路径&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">                    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">status</span> == <span class="number">500</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="title function_">alert</span>(<span class="string">&quot;服务器发生严重错误!&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">                    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">status</span> == <span class="number">200</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="comment">//响应正常，把响应的内容取出来</span></span></span><br><span class="line"><span class="language-javascript">                        <span class="comment">//alert(this.responseText)</span></span></span><br><span class="line"><span class="language-javascript">                        <span class="comment">//把响应的内容取到div中</span></span></span><br><span class="line"><span class="language-javascript">                        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;myDiv&quot;</span>).<span class="property">innerHTML</span> = <span class="variable language_">this</span>.<span class="property">responseText</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//开启通道</span></span></span><br><span class="line"><span class="language-javascript">            xhr.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;/ajax/xx&quot;</span>, <span class="literal">true</span>)</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//发送请求</span></span></span><br><span class="line"><span class="language-javascript">            xhr.<span class="title function_">send</span>()</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;hello ajax&quot;</span> <span class="attr">id</span>=<span class="string">&quot;helloBtn&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;myDiv&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="第三章-Ajax封装（jQuery底层）"><a href="#第三章-Ajax封装（jQuery底层）" class="headerlink" title="第三章 Ajax封装（jQuery底层）"></a>第三章 Ajax封装（jQuery底层）</h1><ul><li>jQuery本质上就是对Ajax使用过程中各种函数和属性的封装</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>手动封装JS库JQuery<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/*封装一个函数，通过这个函数可以获取到html页面中的节点，这个函数叫做jQuery*/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/*要封装的代码是，根据id来获取元素，document.getElementById(&quot;btn&quot;)*/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/*设计思路来源于css的语法（id选择器，类选择器），#id可以获取到这个元素*/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">jQuery</span>(<span class="params">selector</span>)&#123; <span class="comment">// selector（只是一个参数，没其他意思）传入的可能是#id，也可能是其他的选择器，比如.class</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (<span class="keyword">typeof</span> selector == <span class="string">&quot;string&quot;</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//为字符串了再去判断选择器，是函数就走下面的判断</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (selector.<span class="title function_">charAt</span>(<span class="number">0</span>) == <span class="string">&quot;#&quot;</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//表示selector是一个id选择器这里</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//domObj没有加上var，所以是全局变量，后面要用</span></span></span><br><span class="line"><span class="language-javascript">                domObj = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(selector.<span class="title function_">substring</span>(<span class="number">1</span>))</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//为了使用html方法，所以不能返回domObj，而应该返回一个jQuery对象</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//return domObj</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">jQuery</span>()</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//这个分支表示，页面加载完毕后，注册回调函数</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (<span class="keyword">typeof</span> selector == <span class="string">&quot;function&quot;</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//如果这个传递的是function表示这是要传一个函数类型的变量</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//于是就把这个函数穿给页面加载完毕事件</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">window</span>.<span class="property">onload</span> = selector;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//定义一个html方法代替domObj.innerHTML = &quot;&quot;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//这是一个成员方法，只能使用对象去调用</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">html</span> = <span class="keyword">function</span> (<span class="params">htmlText</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//让domObj对象去document.getElementById(&quot;div1&quot;).innerHTML = &quot;&lt;font color=\&quot;red\&quot;&gt;显示的信息如下&lt;/font&gt;&quot;</span></span></span><br><span class="line"><span class="language-javascript">            domObj.<span class="property">innerHTML</span> = htmlText</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//定义一个click()函数，代替domObj.onclick = function()&#123;&#125;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">click</span> = <span class="keyword">function</span> (<span class="params">fun</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            domObj.<span class="property">onclick</span> = fun</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//其它事件发生时进行执行的函数...</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">focus</span> = <span class="keyword">function</span> (<span class="params">fun</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            domObj.<span class="property">onfocus</span> = fun</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">change</span> = <span class="keyword">function</span> (<span class="params">fun</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            domObj.<span class="property">onchange</span> = fun</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">val</span> = <span class="keyword">function</span> (<span class="params">v</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (v == <span class="literal">undefined</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> domObj.<span class="property">value</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                domObj.<span class="property">value</span> = v</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//觉得jQuery名字太长，所以可以重新命名</span></span></span><br><span class="line"><span class="language-javascript">    $ = jQuery</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//-------------------------------------------------------------------------------------------------</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//window.onload = function ()&#123;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/*document.getElementById(&quot;btn&quot;).onclick = function ()&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            document.getElementById(&quot;div1&quot;).innerHTML = &quot;&lt;font color=\&quot;red\&quot;&gt;显示的信息如下&lt;/font&gt;&quot;*/</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//改造后</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/*jQuery(&quot;#btn&quot;).onclick = function ()&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            jQuery(&quot;#div1&quot;).innerHTML = &quot;&lt;font color=\&quot;red\&quot;&gt;显示的信息如下&lt;/font&gt;&quot;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        &#125;*/</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//再改</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/*$(&quot;#btn&quot;).onclick = function ()&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            $(&quot;#div1&quot;).innerHTML = &quot;&lt;font color=\&quot;red\&quot;&gt;显示的信息如下&lt;/font&gt;&quot;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        &#125;*/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//&#125;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//再改</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/*$(function ()&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        $(&quot;#btn&quot;).onclick = function () &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            $(&quot;#div1&quot;).innerHTML = &quot;&lt;font color=\&quot;red\&quot;&gt;显示的信息如下&lt;/font&gt;&quot;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    &#125;)*/</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//不想使用innerHTML这个属性，想用html()函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//再改</span></span></span><br><span class="line"><span class="language-javascript">    $(<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#btn&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;&lt;font color=\&quot;red\&quot;&gt;显示的信息如下&lt;/font&gt;&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//获取文本框的内容</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// var username = document.getElementById(&quot;username&quot;).value</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// alert(username)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//修改文本框内容</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//document.getElementById(&quot;username&quot;).value = &quot;hehe&quot;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//获取文本框的内容</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> username = $(<span class="string">&quot;#username&quot;</span>).<span class="title function_">val</span>()</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">alert</span>(username)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//修改文本框内容</span></span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#username&quot;</span>).<span class="title function_">val</span>(<span class="string">&quot;你好&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>显示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>删除注释整理后</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">jQuery</span>(<span class="params">selector</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> selector == <span class="string">&quot;string&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (selector.<span class="title function_">charAt</span>(<span class="number">0</span>) == <span class="string">&quot;#&quot;</span>)&#123;</span><br><span class="line">            domObj = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(selector.<span class="title function_">substring</span>(<span class="number">1</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">jQuery</span>()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> selector == <span class="string">&quot;function&quot;</span>)&#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">onload</span> = selector;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">html</span> = <span class="keyword">function</span> (<span class="params">htmlText</span>)&#123;</span><br><span class="line">        domObj.<span class="property">innerHTML</span> = htmlText</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">click</span> = <span class="keyword">function</span> (<span class="params">fun</span>)&#123;</span><br><span class="line">        domObj.<span class="property">onclick</span> = fun</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">focus</span> = <span class="keyword">function</span> (<span class="params">fun</span>)&#123;</span><br><span class="line">        domObj.<span class="property">onfocus</span> = fun</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">change</span> = <span class="keyword">function</span> (<span class="params">fun</span>)&#123;</span><br><span class="line">        domObj.<span class="property">onchange</span> = fun</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">val</span> = <span class="keyword">function</span> (<span class="params">v</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (v == <span class="literal">undefined</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> domObj.<span class="property">value</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            domObj.<span class="property">value</span> = v</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$ = jQuery</span><br></pre></td></tr></table></figure><ul><li>封装后使用jQuery能简化代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>测试我们的jQuery<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/jQuery-1.0.0.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    $(<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#btn&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//获取文本框内容</span></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">alert</span>($(<span class="string">&quot;#username&quot;</span>).<span class="title function_">val</span>())</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#mydiv&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;&lt;font color=&#x27;aqua&#x27;&gt;你好&lt;/font&gt;&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">username:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mydiv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>最终版本（底层原理）</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">jQuery</span>(<span class="params">selector</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> selector == <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (selector.<span class="title function_">charAt</span>(<span class="number">0</span>) == <span class="string">&quot;#&quot;</span>) &#123;</span><br><span class="line">            domObj = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(selector.<span class="title function_">substring</span>(<span class="number">1</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">jQuery</span>()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> selector == <span class="string">&quot;function&quot;</span>) &#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">onload</span> = selector</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">html</span> = <span class="keyword">function</span>(<span class="params">htmlStr</span>)&#123;</span><br><span class="line">        domObj.<span class="property">innerHTML</span> = htmlStr</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">click</span> = <span class="keyword">function</span>(<span class="params">fun</span>)&#123;</span><br><span class="line">        domObj.<span class="property">onclick</span> = fun</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">focus</span> = <span class="keyword">function</span> (<span class="params">fun</span>)&#123;</span><br><span class="line">        domObj.<span class="property">onfocus</span> = fun</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">blur</span> = <span class="keyword">function</span>(<span class="params">fun</span>) &#123;</span><br><span class="line">        domObj.<span class="property">onblur</span> = fun</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">change</span> = <span class="keyword">function</span> (<span class="params">fun</span>)&#123;</span><br><span class="line">        domObj.<span class="property">onchange</span> = fun</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">val</span> = <span class="keyword">function</span>(<span class="params">v</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (v == <span class="literal">undefined</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> domObj.<span class="property">value</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            domObj.<span class="property">value</span> = v</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态的方法，发送ajax请求</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分析：使用ajax函数发送ajax请求的时候，需要程序员给我们传过来什么？</span></span><br><span class="line"><span class="comment">     *      请求的方式(type)：GET/POST</span></span><br><span class="line"><span class="comment">     *      请求的URL(url)：url</span></span><br><span class="line"><span class="comment">     *      请求时提交的数据(data)：data</span></span><br><span class="line"><span class="comment">     *      请求时发送异步请求还是同步请求(async)：true表示异步，false表示同步。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    jQuery.<span class="property">ajax</span> = <span class="keyword">function</span>(<span class="params">jsonArgs</span>)&#123;</span><br><span class="line">        <span class="comment">// 1.</span></span><br><span class="line">        <span class="keyword">var</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">        <span class="comment">// 2.</span></span><br><span class="line">        xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">readyState</span> == <span class="number">4</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">status</span> == <span class="number">200</span>) &#123;</span><br><span class="line">                    <span class="comment">// 我们这个工具类在封装的时候，先不考虑那么多，假设服务器返回的都是json格式的字符串。</span></span><br><span class="line">                    <span class="keyword">var</span> jsonObj = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">this</span>.<span class="property">responseText</span>)</span><br><span class="line">                    <span class="comment">// 调用函数</span></span><br><span class="line">                    jsonArgs.<span class="title function_">success</span>(jsonObj)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (jsonArgs.<span class="property">type</span>.<span class="title function_">toUpperCase</span>() == <span class="string">&quot;POST&quot;</span>) &#123;</span><br><span class="line">            <span class="comment">// 3.</span></span><br><span class="line">            xhr.<span class="title function_">open</span>(<span class="string">&quot;POST&quot;</span>, jsonArgs.<span class="property">url</span>, jsonArgs.<span class="property">async</span>)</span><br><span class="line">            <span class="comment">// 4.</span></span><br><span class="line">            xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>)</span><br><span class="line">            xhr.<span class="title function_">send</span>(jsonArgs.<span class="property">data</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (jsonArgs.<span class="property">type</span>.<span class="title function_">toUpperCase</span>() == <span class="string">&quot;GET&quot;</span>) &#123;</span><br><span class="line">            xhr.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>, jsonArgs.<span class="property">url</span> + <span class="string">&quot;?&quot;</span> + jsonArgs.<span class="property">data</span>, jsonArgs.<span class="property">async</span>)</span><br><span class="line">            xhr.<span class="title function_">send</span>()</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$ = jQuery</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里有个细节，执行这个目的是为了让静态方法ajax生效。</span></span><br><span class="line"><span class="keyword">new</span> <span class="title function_">jQuery</span>()</span><br></pre></td></tr></table></figure><ul><li>使用示例（引入真正的jQuery也是这样的）</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    $(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        $(<span class="string">&quot;#btn1&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">                type : <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">                url : <span class="string">&quot;/ajax/ajaxrequest11&quot;</span>,</span><br><span class="line">                data : <span class="string">&quot;username=&quot;</span> + $(<span class="string">&quot;#username&quot;</span>).<span class="title function_">val</span>(),</span><br><span class="line">                <span class="keyword">async</span> : <span class="literal">true</span>,</span><br><span class="line">                success : <span class="keyword">function</span>(<span class="params">json</span>)&#123;</span><br><span class="line">                    $(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">html</span>(json.<span class="property">uname</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MyBatisStudy</title>
      <link href="/2024/02/23/MyBatisStudy/"/>
      <url>/2024/02/23/MyBatisStudy/</url>
      
        <content type="html"><![CDATA[<h1 id="😗第一章-MyBatis概述"><a href="#😗第一章-MyBatis概述" class="headerlink" title="😗第一章 MyBatis概述"></a>😗第一章 MyBatis概述</h1><ul><li><p>SSM三大框架：Spring + SpringMVC + MyBatis</p></li><li><p>framework：框架其实就是对通用代码的封装，提前写好了一堆接口和类，我们可以在做项目的时候直接引入这些接口和类（引入框架），基于这些现有的接口和类进行开发，可以大大提高开发效率。框架一般都以jar包的形式存在。</p></li><li><p>MyBatis本质上就是对JDBC的封装，通过MyBatis完成CRUD。MyBatis在三层架构中负责持久层的，属于持久层框架。</p></li><li><p>ORM（对象关系映射）</p></li><li><ul><li>O（Object）：Java虚拟机中的Java对象</li><li>R（Relational）：关系型数据库</li><li>M（Mapping）：将Java虚拟机中的Java对象映射到数据库表中一行记录，或是将数据库表中一行记录映射成Java虚拟机中的一个Java对象。</li><li>MyBatis属于半自动化ORM框架（可以自己去写sql语句，更加灵活）。</li><li>Hibernate属于全自动化的ORM框架（内置sql语句）。</li></ul></li></ul><h1 id="😘第二章-MySQL数据库"><a href="#😘第二章-MySQL数据库" class="headerlink" title="😘第二章 MySQL数据库"></a>😘第二章 MySQL数据库</h1><p>关于命令行的使用：</p><p>使用前提是去配置好环境变量中的path路径（<a href="https://blog.csdn.net/ifubing/article/details/115459534">解决mysql不是内部或外部命令_mysqld 不是内部或外部命令-CSDN博客</a>）</p><p>命令行基本命令的使用示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">Microsoft Windows [版本 10.0.22631.3085]</span><br><span class="line">(c) Microsoft Corporation。保留所有权利。</span><br><span class="line"></span><br><span class="line">C:\Users\bairimengchang&gt;mysql -uroot -p123456</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 19</span><br><span class="line">Server version: 8.0.34 MySQL Community Server - GPL</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2023, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; use bjpowernode</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; select * from t_car where id = 2;</span><br><span class="line">+----+---------+-----------+-------------+--------------+----------+</span><br><span class="line">| id | car_num | brand     | guide_price | produce_time | car_type |</span><br><span class="line">+----+---------+-----------+-------------+--------------+----------+</span><br><span class="line">|  2 | 1002    | 奔驰E300L |       55.00 | 2020-11-11   | 新能源   |</span><br><span class="line">+----+---------+-----------+-------------+--------------+----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select id, car_num as carNum, brand, guide_price as guidePrice, produce_time as produceTime, car_type as carType from t_car where id = 2;</span><br><span class="line">+----+--------+-----------+------------+-------------+---------+</span><br><span class="line">| id | carNum | brand     | guidePrice | produceTime | carType |</span><br><span class="line">+----+--------+-----------+------------+-------------+---------+</span><br><span class="line">|  2 | 1002   | 奔驰E300L |      55.00 | 2020-11-11  | 新能源  |</span><br><span class="line">+----+--------+-----------+------------+-------------+---------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><ul><li><p>增删改查的基本sql语句（空格无所谓，分号无所谓）</p><ul><li><p>增：insert into t_car(id, car_num, brand) values (1001, “1234”, “宝马”);</p></li><li><p>删：delete from t_car where id&#x3D;1001;</p></li><li><p>改：update t_car set car_num&#x3D;”2344”, brand&#x3D;”比亚迪” where id&#x3D;1001;</p></li><li><p>查：</p><ul><li>单查：select * from t_car where id &#x3D;1;</li><li>全查：select * from t_car;</li><li>模糊查询：select * from t_car where brand like ‘%宝%’;</li></ul></li></ul></li></ul><h1 id="🤗第三章-Mybatis的基本开发流程"><a href="#🤗第三章-Mybatis的基本开发流程" class="headerlink" title="🤗第三章 Mybatis的基本开发流程"></a>🤗第三章 Mybatis的基本开发流程</h1><p>目录结构（展示的是插件高级版，不仅仅是增删改查）</p><p><img src="/../images/mybatis.png"></p><p>pom.xml（maven管理文件）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.niu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-012-generator2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>21<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>21<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--定制构建过程--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--可配置多个插件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--其中的一个插件：mybatis逆向工程插件--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--插件的GAV坐标--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--允许覆盖--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--插件的依赖--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--mysql驱动依赖--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>logback.xml（日志框架依赖）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">debug</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 控制台输出 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;STDOUT&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.classic.encoder.PatternLayoutEncoder&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>[%thread] %-5level %logger&#123;50&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--mybatis log configure--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;com.apache.ibatis&quot;</span> <span class="attr">level</span>=<span class="string">&quot;TRACE&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;java.sql.Connection&quot;</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;java.sql.Statement&quot;</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;java.sql.PreparedStatement&quot;</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 日志输出级别,logback日志级别包括五个：TRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;STDOUT&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;FILE&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>jdbc.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/bjpowernode</span></span><br><span class="line"><span class="attr">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><p>generatorConfig.xml（逆向工程代码生成器配置）（注意更改部分包名等等）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">generatorConfiguration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        targetRuntime有两个值：</span></span><br><span class="line"><span class="comment">            MyBatis3Simple：生成的是基础版，只有基本的增删改查。</span></span><br><span class="line"><span class="comment">            MyBatis3：生成的是增强版，除了基本的增删改查之外还有复杂的增删改查。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">&quot;DB2Tables&quot;</span> <span class="attr">targetRuntime</span>=<span class="string">&quot;MyBatis3&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--防止生成重复代码--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">type</span>=<span class="string">&quot;org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--是否去掉生成日期--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suppressDate&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--是否去除注释--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suppressAllComments&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--连接数据库信息--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/bjpowernode&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">userId</span>=<span class="string">&quot;root&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">password</span>=<span class="string">&quot;123456&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 生成pojo包名和位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.niu.mybatis.pojo&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;src/main/java&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--是否开启子包--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--是否去除字段名的前后空白--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;trimStrings&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 生成SQL映射文件的包名和位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.niu.mybatis.mapper&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;src/main/resources&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--是否开启子包--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 生成Mapper接口的包名和位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span></span></span><br><span class="line"><span class="tag">                <span class="attr">type</span>=<span class="string">&quot;xmlMapper&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">targetPackage</span>=<span class="string">&quot;com.niu.mybatis.mapper&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">targetProject</span>=<span class="string">&quot;src/main/java&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 表名和对应的实体类名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;t_car&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;Car&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>mybatis_config.xml（mybatis框架配置文件）（注意更改部分包名等等）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--这样引入配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--解决查询结果的列名与Java对象的属性名对不上(驼峰自动映射)--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--更省力的办法，直接该包下的类别名都是类名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.niu.mybatis.pojo&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;dev&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;dev&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--关联此目录下的所有mapper.xml文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.niu.mybatis.mapper&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>SqlSessionUtil.java（获取MyBatis执行持久化操作的关键对象SqlSession的工具类）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.niu.mybatis.until;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> bairimengchang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> mybatis</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> Mybatis工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2024/2/6 17:54:29</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SqlSessionUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">SqlSessionUtil</span><span class="params">()</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            sqlSessionFactory = <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(Resources.getResourceAsReader(<span class="string">&quot;mybatis_config.xml&quot;</span>), <span class="string">&quot;dev&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ThreadLocal&lt;SqlSession&gt; local = <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title function_">openSession</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> local.get();</span><br><span class="line">        <span class="keyword">if</span> (sqlSession == <span class="literal">null</span>) &#123;</span><br><span class="line">            sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">            local.set(sqlSession);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sqlSession;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">(SqlSession sqlSession)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (sqlSession != <span class="literal">null</span>) &#123;</span><br><span class="line">            sqlSession.close();</span><br><span class="line">            local.remove();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完上述内容后就可以使用maven里的插件快速生成其它代码了。</p><h1 id="🤣第四章-MyBatis的XxxMapper-xml"><a href="#🤣第四章-MyBatis的XxxMapper-xml" class="headerlink" title="🤣第四章 MyBatis的XxxMapper.xml"></a>🤣第四章 MyBatis的XxxMapper.xml</h1><p>注意标签的使用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.niu.mapper.com.niu.mybatis.CarMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertBatch&quot;</span>&gt;</span></span><br><span class="line">        insert into t_car values</span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;cars&quot;</span> <span class="attr">item</span>=<span class="string">&quot;car&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">            (null, #&#123;car.carNum&#125;, #&#123;car.brand&#125;, #&#123;car.guidePrice&#125;, #&#123;car.produceTime&#125;, #&#123;car.carType&#125;)</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteByIds&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        collection：指定数组或集合</span></span><br><span class="line"><span class="comment">        item：代表数组或集合中的元素</span></span><br><span class="line"><span class="comment">        separator：循环之间的分隔符</span></span><br><span class="line"><span class="comment">        open：整个循环之前加上的内容</span></span><br><span class="line"><span class="comment">        close：整个循环结束的最后加上的内容</span></span><br><span class="line"><span class="comment">        此外还有一种删除的写法，把逗号替换为or即可</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        delete from t_car where id in(</span><br><span class="line">            <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;ids&quot;</span> <span class="attr">item</span>=<span class="string">&quot;id&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">                #&#123;id&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">            )</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByChoose&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Car&quot;</span>&gt;</span></span><br><span class="line">        select * from t_car</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;brand != null and brand != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                    brand like &quot;%&quot;#&#123;brand&#125;&quot;%&quot;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;guidePrice != null and guidePrice != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                    guide_price &gt; #&#123;guidePrice&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">                 <span class="comment">&lt;!-- 这样保证什么都不填时至少要按照品牌搜一下--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">                    car_type = #&#123;carType&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateBySet&quot;</span>&gt;</span></span><br><span class="line">        update t_car</span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                等号左边是数据库表的列名，右边是类属性</span></span><br><span class="line"><span class="comment">                实现不更改的内容保持原样，set标签还能控制逗号的删除</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;carNum != null and carNum != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                car_num = #&#123;carNum&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;brand != null and brand != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                brand = #&#123;brand&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;guidePrice != null and guidePrice != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                guide_price = #&#123;guidePrice&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;produceTime != null and produceTime != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                produce_time = #&#123;produceTime&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;carType != null and carType != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                car_type = #&#123;carType&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        where</span><br><span class="line">            id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByMultiConditionWithTrim&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Car&quot;</span>&gt;</span></span><br><span class="line">        select * from t_car</span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            prefix 加前缀</span></span><br><span class="line"><span class="comment">            suffix 加后缀</span></span><br><span class="line"><span class="comment">            prefixOverrides 删除前缀</span></span><br><span class="line"><span class="comment">            suffixOverrides 删除后缀</span></span><br><span class="line"><span class="comment">            下面的意思：看情况在trim标签所有内容的前面加上一个 where</span></span><br><span class="line"><span class="comment">            把trim标签中内容的后缀and或or去掉</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;where&quot;</span> <span class="attr">suffixOverrides</span>=<span class="string">&quot;and|or&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;brand != null and brand != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                brand like &quot;%&quot;#&#123;brand&#125;&quot;%&quot; and</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;guidePrice != null and guidePrice != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                guide_price &gt; #&#123;guidePrice&#125; and</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;carType != null and carType != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                car_type = #&#123;carType&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByMultiConditionWithWhere&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Car&quot;</span>&gt;</span></span><br><span class="line">        select * from t_car</span><br><span class="line">        <span class="comment">&lt;!--where标签专门负责where子句动态生成的，智能删除某些条件前的and或者or--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;brand != null and brand != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                and brand like &quot;%&quot;#&#123;brand&#125;&quot;%&quot;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;guidePrice != null and guidePrice != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                and guide_price &gt; #&#123;guidePrice&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;carType != null and carType != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                and car_type = #&#123;carType&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByMultiCondition&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Car&quot;</span>&gt;</span></span><br><span class="line">        select * from t_car where 1 = 1</span><br><span class="line">        <span class="comment">&lt;!-- if标签中test属性，true时拼接其包括的字符串，false不拼接，这里如果没有注解而是使用的pojo，则要写pojo类的属性名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;brand != null and brand != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">            and brand like &quot;%&quot;#&#123;brand&#125;&quot;%&quot;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;guidePrice != null and guidePrice != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">            and guide_price &gt; #&#123;guidePrice&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;carType != null and carType != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">            and car_type = #&#123;carType&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>#{}与${}：</p><ul><li>#{}：底层调用PreparedStatement，特点：先进行sql语句的编译，再给sql语句中的？赋值。可以避免sql注入</li><li>${}，底层调用Statement，特点：先进性sql语句的拼接，再进行sql语句的编译。有sql注入的风险（很少使用）</li></ul></li></ul><h1 id="😎第五章-MyBatis的补充内容"><a href="#😎第五章-MyBatis的补充内容" class="headerlink" title="😎第五章 MyBatis的补充内容"></a>😎第五章 MyBatis的补充内容</h1><p>多参数处理（使用Param注解，底层是修改了map集合的key）</p><p>在CarMapper.java文件这样写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Car&gt; <span class="title function_">selectByMultiConditionWithTrim</span><span class="params">(<span class="meta">@Param(&quot;brand&quot;)</span> String brand, <span class="meta">@Param(&quot;guidePrice&quot;)</span> Double guidePrice, <span class="meta">@Param(&quot;carType&quot;)</span> String carType)</span>;</span><br></pre></td></tr></table></figure><p>这样才能在CarMapper.xml中赋值（不然就要使用#{param1}这样的了，底层是去调用map集合的get方法获取对应的值）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByMultiConditionWithTrim&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Car&quot;</span>&gt;</span></span><br><span class="line">    select * from t_car</span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        prefix 加前缀</span></span><br><span class="line"><span class="comment">        suffix 加后缀</span></span><br><span class="line"><span class="comment">        prefixOverrides 删除前缀</span></span><br><span class="line"><span class="comment">        suffixOverrides 删除后缀</span></span><br><span class="line"><span class="comment">        下面的意思：看情况在trim标签所有内容的前面加上一个 where</span></span><br><span class="line"><span class="comment">        把trim标签中内容的后缀and或or去掉</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;where&quot;</span> <span class="attr">suffixOverrides</span>=<span class="string">&quot;and|or&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;brand != null and brand != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">            brand like &quot;%&quot;#&#123;brand&#125;&quot;%&quot; and</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;guidePrice != null and guidePrice != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">            guide_price &gt; #&#123;guidePrice&#125; and</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;carType != null and carType != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">            car_type = #&#123;carType&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>PageHelper插件的使用</p><p>引入依赖（pom.xml）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置插件（mybatis_config.xml）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    mybatis的分页拦截器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">&quot;com.github.pagehelper.PageInterceptor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试（@Test）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.niu.mybatis.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageHelper;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"><span class="keyword">import</span> com.niu.mybatis.mapper.CarMapper;</span><br><span class="line"><span class="keyword">import</span> com.niu.mybatis.pojo.Car;</span><br><span class="line"><span class="keyword">import</span> com.niu.mybatis.until.SqlSessionUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> bairimengchang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> mybatis</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 测试文件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2024/2/17 18:55:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CarMapperTest</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPageHelper</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.openSession();</span><br><span class="line">        <span class="type">CarMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(CarMapper.class);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//在执行DQL（数据查询语言）语句之前进行分页操作</span></span><br><span class="line">        <span class="comment">//表示要看的页码</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">pageNum</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">        <span class="comment">//每页显示的记录条数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">pageSize</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        PageHelper.startPage(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        List&lt;Car&gt; cars = mapper.selectAll();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//封装分页信息对象new PageInfo，由pagehelper提供</span></span><br><span class="line">        <span class="comment">//第一个参数是刚刚查询的结果，第二个数字是导航的卡片数量（类似百度固定有十个页面切换按钮），从而实现对这页数据的分析</span></span><br><span class="line">        PageInfo&lt;Car&gt; pageInfo = <span class="keyword">new</span> <span class="title class_">PageInfo</span>&lt;&gt;(cars, <span class="number">3</span>);</span><br><span class="line">        System.out.println(pageInfo);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//cars.forEach(car -&gt; System.out.println(car));</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            可以通过pageInfo提供的方法来数据，然后给到请求域request中从而让web前端使用</span></span><br><span class="line"><span class="comment">            PageInfo&#123;pageNum=2, pageSize=3, size=3, startRow=4, endRow=6, total=14, pages=5,</span></span><br><span class="line"><span class="comment">            list=Page&#123;count=true, pageNum=2, pageSize=3, startRow=3, endRow=6, total=14, pages=5, reasonable=false, pageSizeZero=false&#125;</span></span><br><span class="line"><span class="comment">            [Car&#123;id=19, carNum=&#x27;1003&#x27;, brand=&#x27;丰田霸道&#x27;, guidePrice=30.0, produceTime=&#x27;2000-10-11&#x27;, carType=&#x27;燃油车&#x27;&#125;,</span></span><br><span class="line"><span class="comment">            Car&#123;id=20, carNum=&#x27;1003&#x27;, brand=&#x27;一汽大众&#x27;, guidePrice=20.0, produceTime=&#x27;2000-03-03&#x27;, carType=&#x27;燃油车&#x27;&#125;,</span></span><br><span class="line"><span class="comment">            Car&#123;id=24, carNum=&#x27;1003&#x27;, brand=&#x27;丰田霸道&#x27;, guidePrice=30.0, produceTime=&#x27;2000-10-11&#x27;, carType=&#x27;燃油车&#x27;&#125;],</span></span><br><span class="line"><span class="comment">            prePage=1, nextPage=3, isFirstPage=false, isLastPage=false, hasPreviousPage=true, hasNextPage=true,</span></span><br><span class="line"><span class="comment">            navigatePages=3, navigateFirstPage=1, navigateLastPage=3, navigatepageNums=[1, 2, 3]&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="🤔第六章-参考资料"><a href="#🤔第六章-参考资料" class="headerlink" title="🤔第六章 参考资料"></a>🤔第六章 参考资料</h1><ul><li><a href="https://www.yuque.com/dujubin/ltckqu/pozck9#cKAWR">MyBatis (yuque.com)</a><ul><li>密码rs4n</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>IDEA使用手册</title>
      <link href="/2024/02/23/IDEA%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
      <url>/2024/02/23/IDEA%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-常用快捷键"><a href="#第一章-常用快捷键" class="headerlink" title="第一章 常用快捷键"></a>第一章 常用快捷键</h1><ul><li>CTRL+N 搜索类</li><li>CTRL+ALT+L 格式化（标准化）</li><li>CTRL+F 12 搜索类中的某个方法</li><li>ALT+INSERT 代码快速生成</li><li>CTRL+SHIFT+M 搜索maven中央仓库</li><li>CTRL+O 重写方法</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>WebDesign</title>
      <link href="/2024/02/21/WebDesign/"/>
      <url>/2024/02/21/WebDesign/</url>
      
        <content type="html"><![CDATA[<h1 id="Script收藏"><a href="#Script收藏" class="headerlink" title="Script收藏"></a>Script收藏</h1><ul><li><p>这段脚本的作用是在用户离开当前页面时显示特定内容的标题，当用户返回页面时显示另一内容的标题，并在一定时间后恢复为原始标题。</p><ul><li><pre><code class="js">  &lt;script&gt;    var leaveTitle = &#39;w(ﾟДﾟ)w 不要走！再看看嘛！&#39;;    var backTitle = &#39;♪(^∇^*)欢迎肥来！&#39;;    var OriginTitile = &quot;HCRT Blog&quot;    var titleTime    // 注册了一个事件监听器，当页面的可见性状态发生变化时执行相应的函数。    document.addEventListener(&#39;visibilitychange&#39;, function () &#123;      if (document.hidden) &#123;        //离开当前页面时标签显示内容        document.title = leaveTitle        //使用 clearTimeout(titleTime) 的作用是在用户返回页面之后立即清除之前设定的定时器，        // 以避免在等待两秒后恢复原标题的过程中用户再次离开页面导致标题立即变回原标题的情况发生。        clearTimeout(titleTime)      &#125; else &#123;        //返回当前页面时标签显示内容        document.title = backTitle + OriginTitile        //两秒后变回正常标题        titleTime = setTimeout(function () &#123;          document.title = OriginTitile        &#125;, 2000)      &#125;    &#125;)  &lt;/script&gt;</code></pre></li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MavenStudy</title>
      <link href="/2024/02/02/MavenStudy/"/>
      <url>/2024/02/02/MavenStudy/</url>
      
        <content type="html"><![CDATA[<h1 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h1><ul><li><p>查看文件的结构（使用powershell命令）</p></li><li><pre><code class="bash">Windows PowerShell版权所有（C） Microsoft Corporation。保留所有权利。安装最新的 PowerShell，了解新功能和改进！https://aka.ms/PSWindowsPS C:\Users\bairimengchang&gt; cd d:PS D:\&gt; cd .\JAVAPS D:\JAVA&gt; cd .\maven_workPS D:\JAVA\maven_work&gt; dir    目录: D:\JAVA\maven_workMode                 LastWriteTime         Length Name----                 -------------         ------ ----d-----         2024/1/31     17:47                HelloTestPS D:\JAVA\maven_work&gt; tree HelloTest卷 Data 的文件夹 PATH 列表卷序列号为 0416-BAA6D:\JAVA\MAVEN_WORK\HELLOTEST└─src    ├─main    │  ├─java    │  │  └─com    │  │      └─niu    │  │          └─javatest    │  └─resources    └─test        ├─java        └─resourcesPS D:\JAVA\maven_work&gt;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- ```xml</span><br><span class="line">  p24.如果各位同志们下载的tomcat10版本然后报错可以把这段复制一下到pom。xml中</span><br><span class="line">  &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;jakarta.servlet.jsp&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jakarta.servlet.jsp-api&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;3.0.0&lt;/version&gt;</span><br><span class="line">        &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">      &lt;/dependency&gt;</span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;jakarta.servlet&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jakarta.servlet-api&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;5.0.0&lt;/version&gt;</span><br><span class="line">        &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">      &lt;/dependency&gt;</span><br></pre></td></tr></table></figure></code></pre></li><li><p>在生成的classes文件夹下执行运行程序的命令</p></li><li><pre><code class="bash">D:\JAVA\maven_work\HelloTest\target\classes&gt;java com.niu.javatest.HelloHELLO Maven!<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- Maven的中央仓库地址：[Maven Repository: Search/Browse/Explore (mvnrepository.com)](https://mvnrepository.com/)</span><br><span class="line"></span><br><span class="line">- 一段中央仓库某个jar包的pom.xml文件的信息</span><br><span class="line"></span><br><span class="line">- ```xml</span><br><span class="line">  &lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span><br><span class="line">  &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;8.0.33&lt;/version&gt;</span><br><span class="line">  &lt;/dependency&gt;</span><br></pre></td></tr></table></figure></code></pre></li><li><p>对pom.xml信息的解释</p></li><li><pre><code class="xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;   xsi:schemaLocation=&quot;http://maven.apche.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;&lt;!-- Maven模型的版本，固定是4.0 --&gt;&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;&lt;!-- 组织id，一般是公司域名的倒写（baidu.com写为com.baidu）可加项目名或者不加项目名 --&gt;&lt;!-- 以下三条是坐标，是项目的唯一标识 --&gt;&lt;groupId&gt;com.niu&lt;/groupId&gt;&lt;!-- 项目名，应该是唯一的 --&gt;&lt;artifactId&gt;ch01-maven&lt;/artifactId&gt;&lt;!-- 项目的版本号 --&gt;&lt;version&gt;1.0.0-SNAPSHOT&lt;/version&gt;&lt;!-- 设置配置属性，比如jdk版本，处理乱码等等 --&gt;&lt;properties&gt;   &lt;java.version&gt;11&lt;/java.version&gt;   &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;   &lt;maven.compiler.source&gt;11&lt;/maven.compiler.source&gt;   &lt;maven.compiler.target&gt;11&lt;/maven.compiler.target&gt;&lt;/properties&gt;&lt;!-- 项目所依赖的其它jar文件，如果本地有就直接用，否则去网上下载 --&gt;&lt;!-- https://mvnrepository.com/artifact/com.alibaba.fastjson2/fastjson2 --&gt;&lt;dependencies&gt;   &lt;dependency&gt;      &lt;groupId&gt;com.alibaba.fastjson2&lt;/groupId&gt;      &lt;artifactId&gt;fastjson2&lt;/artifactId&gt;      &lt;version&gt;2.0.46&lt;/version&gt;   &lt;/dependency&gt;&lt;/dependencies&gt;&lt;/project&gt;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- maven的生命周期</span><br><span class="line"></span><br><span class="line">  - maven构建项目的过程：清理，编译，测试，报告，打包，安装，部署</span><br><span class="line"></span><br><span class="line">  - maven的命令：maven可以独立使用，通过命令，完成整个生命周期。（执行后一个命令会把前面的命令也执行了）</span><br><span class="line"></span><br><span class="line">    - mvn clean ：清理target目录</span><br><span class="line"></span><br><span class="line">    - mvn compile ：编译main/java</span><br><span class="line"></span><br><span class="line">    - mvn test-compile：编译test/java</span><br><span class="line"></span><br><span class="line">    - mvn test：测试（会生成一个目录surefire-report，保存测试结果）</span><br><span class="line"></span><br><span class="line">    - mvn package：打包主程序（会编译、编译测试、测试、并且按照pom.xml配置把主程序打包生成jar包或者war包）</span><br><span class="line"></span><br><span class="line">    - mvn install：安装主程序（会把本工程打包，并且按照本工程的坐标保存到本地仓库中）</span><br><span class="line"></span><br><span class="line">    - mvn deploy：部署主程序（会把本程序打包，按照本工程的坐标保存到本地库中，并且还会保存到私服仓库中，还会自动把项目部署到web容器中）</span><br><span class="line"></span><br><span class="line">    - 具体命令执行窗口演示：</span><br><span class="line"></span><br><span class="line">      - ```bash</span><br><span class="line">        Microsoft Windows [版本 10.0.22631.3085]</span><br><span class="line">        (c) Microsoft Corporation。保留所有权利。</span><br><span class="line">        </span><br><span class="line">        D:\JAVA\maven_work\HelloTest&gt;dir</span><br><span class="line">         驱动器 D 中的卷是 Data</span><br><span class="line">         卷的序列号是 0416-BAA6</span><br><span class="line">        </span><br><span class="line">         D:\JAVA\maven_work\HelloTest 的目录</span><br><span class="line">        </span><br><span class="line">        2024/02/01  18:14    &lt;DIR&gt;          .</span><br><span class="line">        2024/01/31  18:05    &lt;DIR&gt;          ..</span><br><span class="line">        2024/02/01  17:51             1,392 pom.xml</span><br><span class="line">        2024/01/31  17:47    &lt;DIR&gt;          src</span><br><span class="line">        2024/02/01  18:23    &lt;DIR&gt;          target</span><br><span class="line">                       1 个文件          1,392 字节</span><br><span class="line">                       4 个目录 163,548,962,816 可用字节</span><br><span class="line">        </span><br><span class="line">        D:\JAVA\maven_work\HelloTest&gt;mvn clean</span><br><span class="line">        [INFO] Scanning for projects...</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] -------------------------&lt; com.niu:ch01-maven &gt;-------------------------</span><br><span class="line">        [INFO] Building ch01-maven 1.0.0-SNAPSHOT</span><br><span class="line">        [INFO]   from pom.xml</span><br><span class="line">        [INFO] --------------------------------[ jar ]---------------------------------</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- clean:3.2.0:clean (default-clean) @ ch01-maven ---</span><br><span class="line">        [INFO] Deleting D:\JAVA\maven_work\HelloTest\target</span><br><span class="line">        [INFO] ------------------------------------------------------------------------</span><br><span class="line">        [INFO] BUILD SUCCESS</span><br><span class="line">        [INFO] ------------------------------------------------------------------------</span><br><span class="line">        [INFO] Total time:  0.245 s</span><br><span class="line">        [INFO] Finished at: 2024-02-01T18:32:45+08:00</span><br><span class="line">        [INFO] ------------------------------------------------------------------------</span><br><span class="line">        </span><br><span class="line">        D:\JAVA\maven_work\HelloTest&gt;mvn compile</span><br><span class="line">        [INFO] Scanning for projects...</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] -------------------------&lt; com.niu:ch01-maven &gt;-------------------------</span><br><span class="line">        [INFO] Building ch01-maven 1.0.0-SNAPSHOT</span><br><span class="line">        [INFO]   from pom.xml</span><br><span class="line">        [INFO] --------------------------------[ jar ]---------------------------------</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- resources:3.3.1:resources (default-resources) @ ch01-maven ---</span><br><span class="line">        [INFO] Copying 1 resource from src\main\resources to target\classes</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- compiler:3.11.0:compile (default-compile) @ ch01-maven ---</span><br><span class="line">        [INFO] Changes detected - recompiling the module! :source</span><br><span class="line">        [INFO] Compiling 1 source file with javac [debug target 11] to target\classes</span><br><span class="line">        [INFO] ------------------------------------------------------------------------</span><br><span class="line">        [INFO] BUILD SUCCESS</span><br><span class="line">        [INFO] ------------------------------------------------------------------------</span><br><span class="line">        [INFO] Total time:  0.742 s</span><br><span class="line">        [INFO] Finished at: 2024-02-01T18:32:57+08:00</span><br><span class="line">        [INFO] ------------------------------------------------------------------------</span><br><span class="line">        </span><br><span class="line">        D:\JAVA\maven_work\HelloTest&gt;mvn test-compile</span><br><span class="line">        [INFO] Scanning for projects...</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] -------------------------&lt; com.niu:ch01-maven &gt;-------------------------</span><br><span class="line">        [INFO] Building ch01-maven 1.0.0-SNAPSHOT</span><br><span class="line">        [INFO]   from pom.xml</span><br><span class="line">        [INFO] --------------------------------[ jar ]---------------------------------</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- resources:3.3.1:resources (default-resources) @ ch01-maven ---</span><br><span class="line">        [INFO] Copying 1 resource from src\main\resources to target\classes</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- compiler:3.11.0:compile (default-compile) @ ch01-maven ---</span><br><span class="line">        [INFO] Nothing to compile - all classes are up to date</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- resources:3.3.1:testResources (default-testResources) @ ch01-maven ---</span><br><span class="line">        [INFO] Copying 0 resource from src\test\resources to target\test-classes</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ ch01-maven ---</span><br><span class="line">        [INFO] Changes detected - recompiling the module! :source</span><br><span class="line">        [INFO] Compiling 1 source file with javac [debug target 11] to target\test-classes</span><br><span class="line">        [INFO] ------------------------------------------------------------------------</span><br><span class="line">        [INFO] BUILD SUCCESS</span><br><span class="line">        [INFO] ------------------------------------------------------------------------</span><br><span class="line">        [INFO] Total time:  0.804 s</span><br><span class="line">        [INFO] Finished at: 2024-02-01T18:33:08+08:00</span><br><span class="line">        [INFO] ------------------------------------------------------------------------</span><br><span class="line">        </span><br><span class="line">        D:\JAVA\maven_work\HelloTest&gt;mvn test</span><br><span class="line">        [INFO] Scanning for projects...</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] -------------------------&lt; com.niu:ch01-maven &gt;-------------------------</span><br><span class="line">        [INFO] Building ch01-maven 1.0.0-SNAPSHOT</span><br><span class="line">        [INFO]   from pom.xml</span><br><span class="line">        [INFO] --------------------------------[ jar ]---------------------------------</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- resources:3.3.1:resources (default-resources) @ ch01-maven ---</span><br><span class="line">        [INFO] Copying 1 resource from src\main\resources to target\classes</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- compiler:3.11.0:compile (default-compile) @ ch01-maven ---</span><br><span class="line">        [INFO] Nothing to compile - all classes are up to date</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- resources:3.3.1:testResources (default-testResources) @ ch01-maven ---</span><br><span class="line">        [INFO] Copying 0 resource from src\test\resources to target\test-classes</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ ch01-maven ---</span><br><span class="line">        [INFO] Nothing to compile - all classes are up to date</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- surefire:3.2.2:test (default-test) @ ch01-maven ---</span><br><span class="line">        [INFO] Using auto detected provider org.apache.maven.surefire.junit4.JUnit4Provider</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] -------------------------------------------------------</span><br><span class="line">        [INFO]  T E S T S</span><br><span class="line">        [INFO] -------------------------------------------------------</span><br><span class="line">        [INFO] Running com.niu.javatest.TestHello</span><br><span class="line">        maven测试方法执行了</span><br><span class="line">        maven测试方法2执行了</span><br><span class="line">        [INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.044 s -- in com.niu.javatest.TestHello</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] Results:</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] ------------------------------------------------------------------------</span><br><span class="line">        [INFO] BUILD SUCCESS</span><br><span class="line">        [INFO] ------------------------------------------------------------------------</span><br><span class="line">        [INFO] Total time:  1.526 s</span><br><span class="line">        [INFO] Finished at: 2024-02-01T18:33:17+08:00</span><br><span class="line">        [INFO] ------------------------------------------------------------------------</span><br><span class="line">        </span><br><span class="line">        D:\JAVA\maven_work\HelloTest&gt;mvn package</span><br><span class="line">        [INFO] Scanning for projects...</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] -------------------------&lt; com.niu:ch01-maven &gt;-------------------------</span><br><span class="line">        [INFO] Building ch01-maven 1.0.0-SNAPSHOT</span><br><span class="line">        [INFO]   from pom.xml</span><br><span class="line">        [INFO] --------------------------------[ jar ]---------------------------------</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- resources:3.3.1:resources (default-resources) @ ch01-maven ---</span><br><span class="line">        [INFO] Copying 1 resource from src\main\resources to target\classes</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- compiler:3.11.0:compile (default-compile) @ ch01-maven ---</span><br><span class="line">        [INFO] Nothing to compile - all classes are up to date</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- resources:3.3.1:testResources (default-testResources) @ ch01-maven ---</span><br><span class="line">        [INFO] Copying 0 resource from src\test\resources to target\test-classes</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ ch01-maven ---</span><br><span class="line">        [INFO] Nothing to compile - all classes are up to date</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- surefire:3.2.2:test (default-test) @ ch01-maven ---</span><br><span class="line">        [INFO] Using auto detected provider org.apache.maven.surefire.junit4.JUnit4Provider</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] -------------------------------------------------------</span><br><span class="line">        [INFO]  T E S T S</span><br><span class="line">        [INFO] -------------------------------------------------------</span><br><span class="line">        [INFO] Running com.niu.javatest.TestHello</span><br><span class="line">        maven测试方法执行了</span><br><span class="line">        maven测试方法2执行了</span><br><span class="line">        [INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.047 s -- in com.niu.javatest.TestHello</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] Results:</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- jar:3.3.0:jar (default-jar) @ ch01-maven ---</span><br><span class="line">        [INFO] Building jar: D:\JAVA\maven_work\HelloTest\target\ch01-maven-1.0.0-SNAPSHOT.jar</span><br><span class="line">        [INFO] ------------------------------------------------------------------------</span><br><span class="line">        [INFO] BUILD SUCCESS</span><br><span class="line">        [INFO] ------------------------------------------------------------------------</span><br><span class="line">        [INFO] Total time:  1.733 s</span><br><span class="line">        [INFO] Finished at: 2024-02-01T18:33:28+08:00</span><br><span class="line">        [INFO] ------------------------------------------------------------------------</span><br><span class="line">        </span><br><span class="line">        D:\JAVA\maven_work\HelloTest&gt;mvn install</span><br><span class="line">        [INFO] Scanning for projects...</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] -------------------------&lt; com.niu:ch01-maven &gt;-------------------------</span><br><span class="line">        [INFO] Building ch01-maven 1.0.0-SNAPSHOT</span><br><span class="line">        [INFO]   from pom.xml</span><br><span class="line">        [INFO] --------------------------------[ jar ]---------------------------------</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- resources:3.3.1:resources (default-resources) @ ch01-maven ---</span><br><span class="line">        [INFO] Copying 1 resource from src\main\resources to target\classes</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- compiler:3.11.0:compile (default-compile) @ ch01-maven ---</span><br><span class="line">        [INFO] Nothing to compile - all classes are up to date</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- resources:3.3.1:testResources (default-testResources) @ ch01-maven ---</span><br><span class="line">        [INFO] Copying 0 resource from src\test\resources to target\test-classes</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ ch01-maven ---</span><br><span class="line">        [INFO] Nothing to compile - all classes are up to date</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- surefire:3.2.2:test (default-test) @ ch01-maven ---</span><br><span class="line">        [INFO] Using auto detected provider org.apache.maven.surefire.junit4.JUnit4Provider</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] -------------------------------------------------------</span><br><span class="line">        [INFO]  T E S T S</span><br><span class="line">        [INFO] -------------------------------------------------------</span><br><span class="line">        [INFO] Running com.niu.javatest.TestHello</span><br><span class="line">        maven测试方法执行了</span><br><span class="line">        maven测试方法2执行了</span><br><span class="line">        [INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.043 s -- in com.niu.javatest.TestHello</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] Results:</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- jar:3.3.0:jar (default-jar) @ ch01-maven ---</span><br><span class="line">        [INFO]</span><br><span class="line">        [INFO] --- install:3.1.1:install (default-install) @ ch01-maven ---</span><br><span class="line">        [INFO] Installing D:\JAVA\maven_work\HelloTest\pom.xml to D:\JAVA\maven_work\maven_repository\com\niu\ch01-maven\1.0.0-SNAPSHOT\ch01-maven-1.0.0-SNAPSHOT.pom</span><br><span class="line">        [INFO] Installing D:\JAVA\maven_work\HelloTest\target\ch01-maven-1.0.0-SNAPSHOT.jar to D:\JAVA\maven_work\maven_repository\com\niu\ch01-maven\1.0.0-SNAPSHOT\ch01-maven-1.0.0-SNAPSHOT.jar</span><br><span class="line">        [INFO] ------------------------------------------------------------------------</span><br><span class="line">        [INFO] BUILD SUCCESS</span><br><span class="line">        [INFO] ------------------------------------------------------------------------</span><br><span class="line">        [INFO] Total time:  1.742 s</span><br><span class="line">        [INFO] Finished at: 2024-02-01T18:34:05+08:00</span><br><span class="line">        [INFO] ------------------------------------------------------------------------</span><br><span class="line">        </span><br><span class="line">        D:\JAVA\maven_work\HelloTest&gt;</span><br></pre></td></tr></table></figure>- maven的插件：真正完成功能的是插件，插件就是一些jar文件（一些类）- 单元测试（测试方法）：使用junit框架（工具）。  - 测试内容：测试的是类中的方法，每一个方法都是独立测试的，方法是测试的基本单元，  - 在pom文件中加入下述依赖  - ```xml    &lt;!-- https://mvnrepository.com/artifact/junit/junit --&gt;    &lt;!-- junit单元测试的依赖 --&gt;    &lt;dependency&gt;        &lt;groupId&gt;junit&lt;/groupId&gt;        &lt;artifactId&gt;junit&lt;/artifactId&gt;        &lt;version&gt;4.13.2&lt;/version&gt;        &lt;scope&gt;test&lt;/scope&gt;    &lt;/dependency&gt;    <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 在src/test/java目录下，创建测试程序</span><br><span class="line"></span><br><span class="line">  - 测试类的名称：Test+待测试的类名</span><br><span class="line"></span><br><span class="line">  - 测试方法的名称：test+方法名称</span><br><span class="line"></span><br><span class="line">  - 代码如下：</span><br><span class="line"></span><br><span class="line">    - ```java</span><br><span class="line">      package com.niu.javatest;</span><br><span class="line">      </span><br><span class="line">      import org.junit.Test;</span><br><span class="line">      import org.junit.Assert;</span><br><span class="line">      </span><br><span class="line">      public class TestHello &#123;</span><br><span class="line">          @Test</span><br><span class="line">          public void testAdd()&#123;</span><br><span class="line">              System.out.println(&quot;maven测试方法执行了&quot;);</span><br><span class="line">              Hello hello = new Hello();</span><br><span class="line">              int s = hello.add(10, 20);</span><br><span class="line">              //验证10+20是不是30，junit提供的方法，对比结果的</span><br><span class="line">              //assertEquals(期望值，实际值)，值相等就是正确的，不等就抛异常</span><br><span class="line">              Assert.assertEquals(30, s);</span><br><span class="line">          &#125;</span><br><span class="line">          @Test</span><br><span class="line">          public void testAdd2()&#123;</span><br><span class="line">              System.out.println(&quot;maven测试方法2执行了&quot;);</span><br><span class="line">              Hello hello = new Hello();</span><br><span class="line">              int s = hello.add(20, 20);</span><br><span class="line">              //验证20+20是不是40，junit提供的方法，对比结果的</span><br><span class="line">              //assertEquals(期望值，实际值)，值相等就是正确的，不等就抛异常</span><br><span class="line">              Assert.assertEquals(40, s);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></code></pre></li><li><p>在idea中创建maven项目</p></li><li><pre><code>选择对应的maven原型的模板如下：javase项目：maven-archetype-quickstartjavaweb项目：maven-archetype-webapp</code></pre></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JavaWebStudy</title>
      <link href="/2023/12/25/JavaWebStudy/"/>
      <url>/2023/12/25/JavaWebStudy/</url>
      
        <content type="html"><![CDATA[<h1 id="😊一个合法的webapp目录"><a href="#😊一个合法的webapp目录" class="headerlink" title="😊一个合法的webapp目录"></a>😊一个合法的webapp目录</h1><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">webapproot(比如StudentServlet文件夹下)</span><br><span class="line">|------WEB-INF</span><br><span class="line">|------classes(存放编译好的class文件【记得带上com文件夹】)</span><br><span class="line">|------lib(第三方jar包)</span><br><span class="line">|------web.xml(注册Servlet)</span><br><span class="line">|-------html</span><br><span class="line">|-------css</span><br><span class="line">|-------javascript</span><br><span class="line">|-------image</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>新建一个基本的Java项目，然后选中项目为其加上web框架支持</p><h1 id="😊在idea中开发servlet程序的步骤"><a href="#😊在idea中开发servlet程序的步骤" class="headerlink" title="😊在idea中开发servlet程序的步骤"></a>😊在idea中开发servlet程序的步骤</h1><p>1、New Project 新建一个空工程然后再添加模块</p><p>2、新建一个普通的javase模块</p><p>3、添加web框架支持</p><p>4、现在可以先把jsp文件删除</p><p>5、编写servlet的实现类，记得先导入servlet模块</p><p>6、在servlet中的service方法中编写业务代码（这里用了jdbc需要起点数据库服务，以及连接数据库等等）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.niu.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentServlet</span> <span class="keyword">implements</span> <span class="title class_">Servlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ServletConfig <span class="title function_">getServletConfig</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span></span><br><span class="line">            <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//设置响应的内容类型</span></span><br><span class="line">        servletResponse.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> servletResponse.getWriter();</span><br><span class="line"></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//注册驱动</span></span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">            <span class="comment">//获取连接</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/bjpowernode&quot;</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">            conn = DriverManager.getConnection(url, name, password);</span><br><span class="line">            <span class="comment">//获取数据库操作对象</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select deptno, loc from dept&quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line">            <span class="comment">//执行sql</span></span><br><span class="line">            rs = ps.executeQuery();</span><br><span class="line">            <span class="comment">//处理查询结果集</span></span><br><span class="line">            <span class="keyword">while</span> (rs.next())&#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">deptno</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;deptno&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">loc</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;loc&quot;</span>);</span><br><span class="line">                out.print(deptno + <span class="string">&quot;,&quot;</span> + loc +<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException | SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//关闭数据流</span></span><br><span class="line">            <span class="keyword">if</span> (rs != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    rs.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (ps != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    ps.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (conn != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getServletInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>7、在WEB-INF下新建子目录lib，把数据库的驱动jar包放到这里</p><p>8、在web.xml中完成类的注册</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>studentServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.niu.servlet.StudentServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>studentServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/servlet/student<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>9、在web目录下新建一个html文件用于给出一个超链接访问数据库</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>student page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--这里只是静态界面，没学习jsp--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--这里要随便加上项目名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/xiangmuming/servlet/student&quot;</span>&gt;</span>student list<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>10、让idea去关联tomcat服务器，在部署选项中修改“应用程序上下文”为&#x2F;项目名</p><p>11、启动tomcat服务器</p><p>12、不要让tomcat自己启动浏览器，应该自己手动输入（例如：(<a href="http://localhost:8080/xiangmuming/student.html)%EF%BC%89">http://localhost:8080/xiangmuming/student.html)）</a></p><h1 id="😊Servlet对象的生命周期"><a href="#😊Servlet对象的生命周期" class="headerlink" title="😊Servlet对象的生命周期"></a>😊Servlet对象的生命周期</h1><p>Servlet对象是由Tomcat服务器（又叫做WEB容器）全权负责的，但是自己创建的Servlet对象是不受WEB容器管理的。</p><p>WEB容器底层是一个HashMap集合，只有放到这个集合里的Servlet才能被WEB容器管理。</p><p>这个集合的key:请求路径，value:对应的Servlet对象。</p><p>默认情况下，服务器在启动时Servlet对象并不会被实例化。</p><p>但可以在xml中这样配置，就能开局实例化了（一般不用）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.bj.javaweb.servlet.AServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--这里加个整数，数字越小优先级越高--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>0<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Servlet对象生命周期</p><p>先看控制台输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">A无参数构造方法执行了</span><br><span class="line">AServlet&#x27;s init method execute!</span><br><span class="line">AServlet&#x27;s service method execute!</span><br><span class="line">AServlet&#x27;s service method execute!</span><br><span class="line">AServlet&#x27;s service method execute!</span><br><span class="line">AServlet&#x27;s service method execute!</span><br></pre></td></tr></table></figure><p>用户第一次发送请求时，Servlet对象被实例化（AServlet的无参构造方法被执行了）。</p><p>AServlet对象被创建出来后，Tomcat服务器马上调用AServlet对象的init方法。</p><p>init方法执行之后，Tomcat服务器马上调用AServlet对象的service方法</p><p>后续用户发出请求，只执行service方法</p><p>以上这些说明：</p><p>1.Servlet对象是单例（单个实例对象）的，准确来说是假单例的（因为new的操作是服务器做的）。</p><p>2.无参数构造方法，init只有第一次请求时执行，也就是说无参构造方法只执行一次，init方法页只被Tomcat服务器调用一次。</p><p>3.只要用户发送一次请求，service方法就必然会被服务器调用一次。</p><p>关闭服务器时，控制台输出了下面的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AServlet&#x27;s destroy method execute!</span><br></pre></td></tr></table></figure><p>这说明：</p><p>Servlet的destroy方法只被服务器调用一次。</p><p>destroy方法是在服务器关闭的时候调用的，这是服务器为了销毁AServlet对象。</p><p>这个方法调用时，对象还没有被销毁（因为要对象要调用这个方法），调用完成后才销毁。</p><h1 id="😎ServletConfig"><a href="#😎ServletConfig" class="headerlink" title="😎ServletConfig"></a>😎ServletConfig</h1><p>ServletConfig（Servlet对象的配置信息对象）:Servlet规范中的一员，是一个接口<br>org.apache.catalina.core.StandardWrapperFacade实现了接口（tomcat服务器实现了接口）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">org</span>.apache.catalina.core.StandardWrapperFacade <span class="keyword">implements</span> <span class="title class_">ServletContext</span></span><br></pre></td></tr></table></figure><p>一个Servlet对象有一个ServletConfig对应，且是一对一的<br>这个对象是tomcat服务器创建的，在创建Servlet对象的同时创建了ServletConfig对象</p><p>ServletConfig对象中包含的信息（在xml文件中）servlet标签中的内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>AServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.niu.pojo.AServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>name<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>niu<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>password<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br></pre></td></tr></table></figure><p>tomcat服务器创建ServletConfig对象时，会把Servlet标签中的内容封装到ServletConfig对象中</p><p><init-parm>标签中就是Servlet标签中的初始化参数</p><p>ServletConfig接口的常用方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">getInitParameter</span><span class="params">(String nane)</span>;<span class="comment">//通过初始化参数的name获取value</span></span><br><span class="line"><span class="keyword">public</span> Enumeration&lt;string&gt; <span class="title function_">getInitParameterNames</span><span class="params">()</span>;<span class="comment">//获取所有的初始化参数的name</span></span><br><span class="line"><span class="keyword">public</span> ServletContext <span class="title function_">getServletContext</span><span class="params">()</span>;<span class="comment">//获取ServletContext对象</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getServletName</span><span class="params">()</span>;<span class="comment">//获取Servlet的name</span></span><br></pre></td></tr></table></figure><h1 id="😎ServletContext"><a href="#😎ServletContext" class="headerlink" title="😎ServletContext"></a>😎ServletContext</h1><p>ServletContext（Servlet对象的环境信息对象又叫Servlet对象的上下文对象）是Servlet规范中的一员。</p><p>org.apache.catalina.core.ApplicationContextFacade实现了接口（tomcat服务器实现了接口）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">org</span>.apache.catalina.core.ApplicationContextFacade <span class="keyword">implements</span> <span class="title class_">ServletContext</span></span><br></pre></td></tr></table></figure><p>对于一个webapp来说，ServletContext对象只有一个，且在服务器关闭时销毁</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>user<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>root<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>work<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>homework<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    以上信息属于应用级的配置信息，一般一个项目中共享的配置信息会放到以上的标签当中--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    如果配置信息只想给某一个servlet参考，那么应当配置在servlet标签中使用--&gt;</span></span><br></pre></td></tr></table></figure><p>ServletContext接口的常用方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">getInitParameter</span><span class="params">(String name)</span>;<span class="comment">//通过初始化参数的name获取value</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Enumeration&lt;string&gt; <span class="title function_">getInitParameterNames</span><span class="params">()</span>;<span class="comment">//获取所有的初始化参数的name</span></span><br><span class="line"></span><br><span class="line">使用实例：</span><br><span class="line">        Enumeration&lt;String&gt; en = application.getInitParameterNames();</span><br><span class="line">        <span class="keyword">while</span> (en.hasMoreElements())&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> en.nextElement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> application.getInitParameter(name);</span><br><span class="line">            out.println(<span class="string">&quot;name:&quot;</span>+name+<span class="string">&quot;value:&quot;</span>+value);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>更多方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">getContextPath</span><span class="params">()</span>;<span class="comment">//动态的获取应用的根路径，避免在程序中将路径写死，</span></span><br><span class="line"><span class="comment">//输出结果例如/servlet03_war_exploded</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getRealPath</span><span class="params">(String path)</span>;<span class="comment">//获取文件的绝对路径（真实路径）默认是从根目录（即web目录）下开始寻找，所以参数要填写web下的目录路径，例如\common\index.html</span></span><br><span class="line"><span class="comment">//输出结果例如D:\JAVA\IntelliJ IDEA 2021.2.3\WorkSpace_JAVA\JavaWeb_Study\out\artifacts\servlet03_war_exploded\common\index.html </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">log</span><span class="params">(String message)</span>;<span class="comment">//记录日志，application.log(&quot;今天是美好的一天&quot;);</span></span><br><span class="line"><span class="comment">//记录在例如C:\Users\bairimengchang\AppData\Local\JetBrains\IntelliJIdea2021.2\tomcat\92fbcfde-f5d8-4b1b-9c57-3e22239ccede目录下的logs文件夹下</span></span><br><span class="line"><span class="comment">//日志文件的分类</span></span><br><span class="line"><span class="comment">//catalina.2023-10-07.log 服务器端的java程序运行的控制台信息</span></span><br><span class="line"><span class="comment">//localhost.2023-10-17.log ServletContext对象的log方法记录的日志信息</span></span><br><span class="line"><span class="comment">//localhost_access_log.2023-10-21.log 访问日志</span></span><br></pre></td></tr></table></figure><p>更多方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ServletContext对象又被叫做应用域（后面还有请求域、会话域）</span></span><br><span class="line"><span class="comment">// 如果所有servlet应用共享一份数据，并且这个数据很少修改，量很少，那么就可以将这些数据放到ServletContext这个应用域中</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAttribute</span><span class="params">(String name,Object value)</span>;<span class="comment">//向应用域存数据</span></span><br><span class="line"><span class="keyword">public</span> Object <span class="title function_">getAttribute</span><span class="params">(String name)</span>;<span class="comment">//向应用域取数据</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeAttribute</span><span class="params">(String name)</span>;<span class="comment">//删除应用域的数据</span></span><br></pre></td></tr></table></figure><h1 id="😊HTTP协议"><a href="#😊HTTP协议" class="headerlink" title="😊HTTP协议"></a>😊HTTP协议</h1><p>协议：一套规范，一套标准，按照这个规范来，才能无障碍交流。</p><p>HTTP（超文本传输协议）由W3C制定的一种消息模板。</p><ul><li>超文本：不是普通文本，比如流媒体：声音、视频、图片等。</li><li>HTTP协议支持：不但可以传送普通字符串，同时支持传递声音、视频、图片等流媒体信息。</li></ul><p>这种协议游走在B&#x2F;S之间，B-&gt;S发数据需要遵循HTTP协议（请求request），S-&gt;B发数据也需要遵循HTTP协议（响应response）。这样B和S之间才能解耦合。</p><ul><li><p>解耦合：B不依赖S，S也不依赖B。</p></li><li><p>请求协议：浏览器向web服务器发送数据的时候，这个发送的数据需要遵循一套标准，这套标准中规定了发送的数据具体格式。</p><ul><li><p>HTTP请求协议包括：4部分</p><ul><li>请求行</li><li>请求头</li><li>空白行</li><li>请求体</li></ul></li><li><p>HTTP请求协议的具体报文：GET请求</p><ul><li><pre><code>请求行GET /servlet04_war_exploded/getServlet?username=jick&amp;userpwd=123456 HTTP/1.1       Accept:           请求头text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6Connection: keep-aliveCookie: Webstorm-5e0ef3d1=dff06e2a-2d77-41a9-8e2f-fd485e866ba3Host: localhost:8080Referer: http://localhost:8080/servlet04_war_exploded/index.htmlSec-Fetch-Dest: documentSec-Fetch-Mode: navigateSec-Fetch-Site: same-originSec-Fetch-User: ?1Upgrade-Insecure-Requests: 1User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 Edg/118.0.2088.61sec-ch-ua: &quot;Chromium&quot;;v=&quot;118&quot;, &quot;Microsoft Edge&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;sec-ch-ua-mobile: ?0sec-ch-ua-platform: &quot;Windows&quot;空白行请求体username=jick&amp;userpwd=123456        （查询字符串参数）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">- HTTP请求协议的具体报文：POST请求</span><br><span class="line"></span><br><span class="line">  - ```</span><br><span class="line">    请求行</span><br><span class="line">    POST /servlet04_war_exploded/postServlet HTTP/1.1</span><br><span class="line">    请求头</span><br><span class="line">    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line">    Accept-Encoding: gzip, deflate, br</span><br><span class="line">    Accept-Language: zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6</span><br><span class="line">    Cache-Control: max-age=0</span><br><span class="line">    Connection: keep-alive</span><br><span class="line">    Content-Length: 28</span><br><span class="line">    Content-Type: application/x-www-form-urlencoded</span><br><span class="line">    Cookie: Webstorm-5e0ef3d1=dff06e2a-2d77-41a9-8e2f-fd485e866ba3</span><br><span class="line">    Host: localhost:8080</span><br><span class="line">    Origin: http://localhost:8080</span><br><span class="line">    Referer: http://localhost:8080/servlet04_war_exploded/index.html</span><br><span class="line">    Sec-Fetch-Dest: document</span><br><span class="line">    Sec-Fetch-Mode: navigate</span><br><span class="line">    Sec-Fetch-Site: same-origin</span><br><span class="line">    Sec-Fetch-User: ?1</span><br><span class="line">    Upgrade-Insecure-Requests: 1</span><br><span class="line">    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 Edg/118.0.2088.61</span><br><span class="line">    sec-ch-ua: &quot;Chromium&quot;;v=&quot;118&quot;, &quot;Microsoft Edge&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</span><br><span class="line">    sec-ch-ua-mobile: ?0</span><br><span class="line">    sec-ch-ua-platform: &quot;Windows&quot;</span><br><span class="line">    空白行</span><br><span class="line">    </span><br><span class="line">    请求体</span><br><span class="line">    username=jick&amp;userpwd=123456        （表单数据）</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul></li><li><p>响应协议：web服务器向浏览器发送数据的时候，这个发送的数据需要遵循一套标准，这套标准中规定了发送的数据具体格式。</p><ul><li><p>HTTP响应协议包括：4部分</p><ul><li>状态行</li><li>响应头</li><li>空白行</li><li>响应体</li></ul></li><li><p>HTTP响应协议具体报文</p><ul><li><pre><code class="html">HTTP/1.1 200Content-Type: text/html;charset=UTF-8Content-Length: 128Date: Sat, 21 Oct 2023 12:23:57 GMTKeep-Alive: timeout=20Connection: keep-alive&lt;!DOCTYPE html&gt;&lt;head&gt;    &lt;title&gt;from get servlet&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;h1&gt;from get servlet&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">从服务器上获取资源，使用get请求；向服务器提交数据，使用post请求。post请求相对安全</span><br><span class="line"></span><br><span class="line">大部分的form表单提交，因为数据量大，且要传给服务器，所以使用post请求。</span><br><span class="line"></span><br><span class="line">get请求会回显敏感信息到地址栏上。</span><br><span class="line"></span><br><span class="line">发送的请求数据的格式</span><br><span class="line"></span><br><span class="line">- name=value&amp;name=value&amp;name=value&amp;name=value</span><br><span class="line">- name是什么？</span><br><span class="line">  - 以form表单为例：form表单中input标签的name</span><br><span class="line">- value是什么？</span><br><span class="line">  - 以form表单为例：form表单中input标签的value</span><br><span class="line"></span><br><span class="line"># 😊模板方法设计模式</span><br><span class="line"></span><br><span class="line">- 设计模式：某个问题的固定的解决方案。（可以被重复使用）</span><br><span class="line">- 设计模式分类</span><br><span class="line">  - GoF设计模式：</span><br><span class="line">    - 指23种设计模式</span><br><span class="line">    - 单例模式</span><br><span class="line">    - 工厂模式</span><br><span class="line">    - 代理模式</span><br><span class="line">    - 门面模式</span><br><span class="line">    - 责任链设计模式</span><br><span class="line">    - 观察者模式</span><br><span class="line">    - 模板方法设计模式</span><br><span class="line">    - ......</span><br><span class="line">  - JavaEE设计模式：</span><br><span class="line">    - DAO</span><br><span class="line">    - DTO</span><br><span class="line">    - VO</span><br><span class="line">    - PO</span><br><span class="line">    - pojo</span><br><span class="line">    - ......</span><br><span class="line">- 模板方法设计模式：在模板类（通常是抽象类）的模板方法中定义核心算法（通常是final的）骨架，具体的实现步骤可以延迟到子类当中完成。</span><br><span class="line"></span><br><span class="line"># 😀HttpServlet源码分析</span><br><span class="line"></span><br><span class="line">回忆一下Servlet的生命周期</span><br><span class="line"></span><br><span class="line">- 用户第一次请求：</span><br><span class="line">  - Tomcat服务器通过反射机制，调用无参数构造方法。创建Servlet对象。（web.xml文件中配置的Servlet类对应的对象）</span><br><span class="line">  - Tomcat服务器调用Servlet对象的init方法完成初始化</span><br><span class="line">  - Tomcat服务器调用Servlet对象的service方法处理请求</span><br><span class="line">- 用户第二次请求：</span><br><span class="line">  - Tomcat服务器调用Servlet对象的service方法处理请求</span><br><span class="line">- 用户第三次请求：</span><br><span class="line">  - Tomcat服务器调用Servlet对象的service方法处理请求</span><br><span class="line">- ...</span><br><span class="line">  - Tomcat服务器调用Servlet对象的service方法处理请求</span><br><span class="line">- 服务器关闭</span><br><span class="line">  - Tomcat服务器调用Servlet对象的destory方法，做销毁之前的工作</span><br><span class="line">  - Tomcat服务器销毁Servlet对象</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">public class WelcomeServlet extends HttpServlet&#123;</span><br><span class="line">//用户第一次请求，创建WelcomeServlet对象的时候，会执行这个无参数构造方法。</span><br><span class="line">    public WelcomeServlet()&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public abstract class GenericServlet implements Servlet, ServletConfig, java.io.Serializable &#123;</span><br><span class="line">    </span><br><span class="line">    //用户第一次请求的时候，WelcomeServlet对象第一次被创建之后，这个init方法会执行</span><br><span class="line">        public void init(ServletConfig config) throws ServletException &#123;</span><br><span class="line">        this.config = config;</span><br><span class="line">        this.init();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    //用户第一次请求的时候，带有参数的init(ServletConfig config)执行之后，会执行这个没有参数的init()</span><br><span class="line">     public void init() throws ServletException &#123;</span><br><span class="line">        // NOOP by default</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//HttpServlet模板类</span><br><span class="line">public abstract class HttpServlet extends GenericServlet &#123;</span><br><span class="line">    //用户每次发请求都会执行一次这个service方法</span><br><span class="line">    @Override</span><br><span class="line">    public void service(ServletRequest req, ServletResponse res) throws ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">        HttpServletRequest request;</span><br><span class="line">        HttpServletResponse response;</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            //将ServletRequest和ServletResponse向下转型为带有Http的HttpServletRequest和HttpServletResponse</span><br><span class="line">            request = (HttpServletRequest) req;</span><br><span class="line">            response = (HttpServletResponse) res;</span><br><span class="line">        &#125; catch (ClassCastException e) &#123;</span><br><span class="line">            throw new ServletException(lStrings.getString(&quot;http.non_http&quot;));</span><br><span class="line">        &#125;</span><br><span class="line">        //调用重载的service方法</span><br><span class="line">        service(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    //这个service方法的两个参数都是带有Http的</span><br><span class="line">    //这个service是一个模板方法</span><br><span class="line">    //核心算法骨架，具体实现延迟到子类中去完成</span><br><span class="line">    protected void service(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;</span><br><span class="line">//获取请求方式，这里用到了请求对象req，我们之后重写doGet等首先操作的是响应对象resp</span><br><span class="line">        //获得七种请求方式中的一种</span><br><span class="line">        //GET POST PUT DELETE HEAD OPTIONS TRACE</span><br><span class="line">        String method = req.getMethod();</span><br><span class="line"></span><br><span class="line">        //如果请求方式是GET请求，则执行doGet方式</span><br><span class="line">        if (method.equals(METHOD_GET)) &#123;</span><br><span class="line">            long lastModified = getLastModified(req);</span><br><span class="line">            if (lastModified == -1) &#123;</span><br><span class="line">                // servlet doesn&#x27;t support if-modified-since, no reason</span><br><span class="line">                // to go through further expensive logic</span><br><span class="line">                doGet(req, resp);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                long ifModifiedSince;</span><br><span class="line">                try &#123;</span><br><span class="line">                    ifModifiedSince = req.getDateHeader(HEADER_IFMODSINCE);</span><br><span class="line">                &#125; catch (IllegalArgumentException iae) &#123;</span><br><span class="line">                    // Invalid date header - proceed as if none was set</span><br><span class="line">                    ifModifiedSince = -1;</span><br><span class="line">                &#125;</span><br><span class="line">                if (ifModifiedSince &lt; (lastModified / 1000 * 1000)) &#123;</span><br><span class="line">                    // If the servlet mod time is later, call doGet()</span><br><span class="line">                    // Round down to the nearest second for a proper compare</span><br><span class="line">                    // A ifModifiedSince of -1 will always be less</span><br><span class="line">                    maybeSetLastModified(resp, lastModified);</span><br><span class="line">                    doGet(req, resp);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    resp.setStatus(HttpServletResponse.SC_NOT_MODIFIED);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; else if (method.equals(METHOD_HEAD)) &#123;</span><br><span class="line">            long lastModified = getLastModified(req);</span><br><span class="line">            maybeSetLastModified(resp, lastModified);</span><br><span class="line">            doHead(req, resp);</span><br><span class="line"></span><br><span class="line">        &#125; else if (method.equals(METHOD_POST)) &#123;</span><br><span class="line">            doPost(req, resp);</span><br><span class="line"></span><br><span class="line">        &#125; else if (method.equals(METHOD_PUT)) &#123;</span><br><span class="line">            doPut(req, resp);</span><br><span class="line"></span><br><span class="line">        &#125; else if (method.equals(METHOD_DELETE)) &#123;</span><br><span class="line">            doDelete(req, resp);</span><br><span class="line"></span><br><span class="line">        &#125; else if (method.equals(METHOD_OPTIONS)) &#123;</span><br><span class="line">            doOptions(req, resp);</span><br><span class="line"></span><br><span class="line">        &#125; else if (method.equals(METHOD_TRACE)) &#123;</span><br><span class="line">            doTrace(req, resp);</span><br><span class="line"></span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            //</span><br><span class="line">            // Note that this means NO servlet supports whatever</span><br><span class="line">            // method was requested, anywhere on this server.</span><br><span class="line">            //</span><br><span class="line"></span><br><span class="line">            String errMsg = lStrings.getString(&quot;http.method_not_implemented&quot;);</span><br><span class="line">            Object[] errArgs = new Object[1];</span><br><span class="line">            errArgs[0] = method;</span><br><span class="line">            errMsg = MessageFormat.format(errMsg, errArgs);</span><br><span class="line"></span><br><span class="line">            resp.sendError(HttpServletResponse.SC_NOT_IMPLEMENTED, errMsg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    //两个405错误，表示请求方式错误</span><br><span class="line">    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;</span><br><span class="line">        String msg = lStrings.getString(&quot;http.method_get_not_supported&quot;);</span><br><span class="line">        sendMethodNotAllowed(req, resp, msg);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">        protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">        String msg = lStrings.getString(&quot;http.method_post_not_supported&quot;);</span><br><span class="line">        sendMethodNotAllowed(req, resp, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul></li></ul><p>如果前端发送请求是get请求，则后端程序员重写的方法是doGet。</p><p>如果前端发送请求是post请求，则后端程序员重写的方法是doPost。</p><p>如果不这样做，就会体会到HttpServlet的405报错服务。</p><h1 id="😂web站点的欢迎界面"><a href="#😂web站点的欢迎界面" class="headerlink" title="😂web站点的欢迎界面"></a>😂web站点的欢迎界面</h1><p>当我们访问<a href="http://localhost:8080/servlet06%E6%97%B6%EF%BC%8C%E6%B2%A1%E6%9C%89%E5%88%B6%E5%AE%9A%E8%B5%84%E6%BA%90%E8%B7%AF%E5%BE%84%EF%BC%8C%E6%AD%A4%E6%97%B6%E5%B0%B1%E6%98%AF%E5%9C%A8%E8%AE%BF%E9%97%AE%E8%B5%84%E6%BA%90%E7%95%8C%E9%9D%A2">http://localhost:8080/servlet06时，没有制定资源路径，此时就是在访问资源界面</a></p><p>在web目录下新建一个welcome.html文件，servlet类文件也能作为欢迎页</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        注意不能以斜杠开头--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>welcome.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样就完成了欢迎界面的配置</p><h1 id="😘WEB-INF目录"><a href="#😘WEB-INF目录" class="headerlink" title="😘WEB-INF目录"></a>😘WEB-INF目录</h1><p>放在WEB-INF目录下的资源是受保护的，在浏览器是不能够通过路径直接访问。所以像HTML\CSS\JS\image等静态资源一定要放到WEB-INF目录之外。</p><h1 id="😗HttpServletResquest接口"><a href="#😗HttpServletResquest接口" class="headerlink" title="😗HttpServletResquest接口"></a>😗HttpServletResquest接口</h1><p>request对象和response对象，一个是请求对象，一个是响应对象。这两个对象只在当前请求中有效。</p><p>HttpServletRequest接口中的常用方法</p><ul><li><p>获取前端浏览器用户提交的数据</p><ul><li><pre><code class="java">Map&lt;String, String[]&gt; getParmeterMap() 这个是获取MapEnumeration&lt;String&gt; getParameterNames() 这个是获取Map集合中的所有keyString[] getParameterValues(String name) 根据key获取Map集合的valueString getParameter(String name) 获取value这个一维数组当中的第一个元素（常用）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line"></span><br><span class="line">- 如何存储form表单提交的数据（name=value&amp;name=value&amp;name=value&amp;name=value）</span><br><span class="line"></span><br><span class="line">- 采用Map集合来存储</span><br><span class="line"></span><br><span class="line">  - ```java</span><br><span class="line">    Map&lt;String, String[]&gt;</span><br><span class="line">    key存储String</span><br><span class="line">    value存储String[]</span><br><span class="line">        key        value</span><br><span class="line">        ----------------</span><br><span class="line">        username   abc</span><br><span class="line">        userpwd    1234</span><br><span class="line">        aihao      &#123;&quot;a&quot;, &quot;b&quot;, &quot;c&quot;&#125;</span><br><span class="line">        注意到一个键可能会对应多个值的情况，所以采取上面所示的数据结构</span><br></pre></td></tr></table></figure></code></pre></li></ul></li><li><p>注意：前端永远提交的是字符串，后端获取的也一定是字符串，即数字120其实是”120”。</p></li><li><p>”应用域“ServletContext当中有三个操作域的方法：</p></li><li><pre><code class="java">void setAttribute(String name, Object obj);//向域中绑定数据Object getAttribute(String name);//从域中根据name获取数据void removeAttribute(String name);//将域当中绑定的数据移除//以上操作类似Map集合的操作Map&lt;String, Object&gt; map;map.put(&quot;name&quot;, obj);//向map集合中添加key和valueObject obj = map.get(&quot;name&quot;);//通过key获取valuemap.remove(&quot;name&quot;);//通过key删除key和value这个键值对<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- “请求域”对象</span><br><span class="line"></span><br><span class="line">  - “请求域”对象要比“应用域“对象范围小很多，生命周期也短很多，请求域只在一次请求内有效。</span><br><span class="line">  - 一个请求对象request对应一个请求域对象，一次请求之后就被销毁了</span><br><span class="line">  - 请求域对象也有这三个方法</span><br><span class="line"></span><br><span class="line">- ```java</span><br><span class="line">  void setAttribute(String name, Object obj);//向域中绑定数据</span><br><span class="line">  Object getAttribute(String name);//从域中根据name获取数据</span><br><span class="line">  void removeAttribute(String name);//将域当中绑定的数据移除</span><br></pre></td></tr></table></figure></code></pre></li><li><p>请求转发方法</p><ul><li><pre><code class="java">//以转发html为例req.getRequestDispatcher(&quot;/test.html&quot;).forward(req, resp);<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">- 关于request对象中两个非常容易混淆的方法：</span><br><span class="line"></span><br><span class="line">  - ```java</span><br><span class="line">    //Paramter翻译为：参数</span><br><span class="line">    //uri?username=zhangsan&amp;userpwd=123456</span><br><span class="line">    String username = request.getParamter(&quot;username&quot;);</span><br><span class="line">    </span><br><span class="line">    //Attribute翻译为：属性</span><br><span class="line">    //之前是执行了request.setAttribute(&quot;name&quot;, new Object())</span><br><span class="line">    Object obj = request.getAttribute(&quot;name&quot;);</span><br><span class="line">    </span><br><span class="line">    //以上两个方法的区别</span><br><span class="line">    //第一个方法获取的是用户在浏览器上提交的数据</span><br><span class="line">    //第二个方法获取的是在请求域中绑定的数据</span><br></pre></td></tr></table></figure></code></pre></li></ul></li><li><p>其他方法</p><ul><li><pre><code class="java">//获取客户端的IP地址String remoteAddr = req.getRemoteAddr();//get请求在请求行上提交数据//post请求在请求体中提交数据//设置请求体的字符集（显然这个是针对post请求乱码问题，解决不了get请求的乱码问题）//这个乱码问题在tomcat10之后，request请求体当中的字符集编码默认就是utf-8了，所以不用再设置request.setCharacterEncoding(&quot;UTF-8&quot;);//解决tomcat10版本之前的响应中，中文乱码问题resp.setContentType(&quot;text/html;charset=UTF-8&quot;);//处理get请求乱码问题//不会乱码，因为URIEncoding默认就是UTF-8（tomcat8之前还是会乱码）//解决办法：修改CATALINA_HOME/conf/server.xml文件&lt;Connector URIEncoding = &quot;UTF-8&quot;/&gt;//获取应用的根路径String contextPath = request.getContextPath();//获取请求方式String method = req.getMethod();//获取请求的uriString requestURI = req.getRequestURI();//获取servlet pathString servletPath = req.getServletPath();<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line"></span><br><span class="line"># 🤗使用纯Servlet做一个单表的CRUD操作</span><br><span class="line"></span><br><span class="line">- 对部门的增删改查操作（B/S结构）</span><br><span class="line"></span><br><span class="line">- 步骤</span><br><span class="line"></span><br><span class="line">  - 第一步：准备一张数据库表</span><br><span class="line"></span><br><span class="line">    - ```sql</span><br><span class="line">      #部门表</span><br><span class="line">      drop table if exists dept;</span><br><span class="line">      create table dept(</span><br><span class="line">          deptno int primary key,</span><br><span class="line">          dname varchar(255),</span><br><span class="line">          loc varchar(255)</span><br><span class="line">      );</span><br><span class="line">      insert into dept(deptno, dname, loc) values(10,&#x27;销售部&#x27;,&#x27;北京&#x27;);</span><br><span class="line">      insert into dept(deptno, dname, loc) values(20,&#x27;研发部&#x27;,&#x27;上海&#x27;);</span><br><span class="line">      insert into dept(deptno, dname, loc) values(30,&#x27;技术部&#x27;,&#x27;广州&#x27;);</span><br><span class="line">      insert into dept(deptno, dname, loc) values(40,&#x27;媒体部&#x27;,&#x27;深圳&#x27;);</span><br><span class="line">      commit;</span><br><span class="line">      select * from dept;</span><br></pre></td></tr></table></figure></code></pre></li><li><p>第二步：准备一套HTML页面（项目原型）</p><ul><li>欢迎界面：indext.html</li><li>列表界面：list.html(以此界面为核心，展开其他操作)</li><li>新增界面：add.html</li><li>修改界面：edit.html</li><li>详情界面：detail.html</li></ul></li><li><p>第三步：分析系统中包含的功能</p><ul><li>功能：只要操作连接了数据库，就表示一个独立的功能。</li><li>包含的功能：<ul><li>查看部门列表</li><li>新增部门</li><li>删除部门</li><li>查看部门详细信息</li><li>跳转到修改界面</li><li>修改部门</li></ul></li></ul></li><li><p>第四步：在IDEA中搭建开发环境</p><ul><li>基本的环境配置</li><li>把html文件放到web目录下</li></ul></li><li><p>第五步：实现功能（查看部门列表）</p><ul><li>写代码的过程应该是程序的执行过程</li><li>分析list界面中哪部分是静态的以及哪部分是动态的</li><li>为了避免冲突，html界面中的双引号替换为单引号（用记事本即可）</li></ul></li><li><p>第六步：接下来就是逐步实现每个功能（这里仅放一些重要的代码）</p><ul><li><p>DBUtil 数据库连接工具类</p></li><li><pre><code class="java">package com.niu.oa.utils;import java.sql.*;import java.util.ResourceBundle;/*JDBC工具类 */public class DBUtil &#123;    //静态变量：在类加载时执行    //并且是自上而下的顺序    private static ResourceBundle bundle = ResourceBundle.getBundle(&quot;resources.jdbc&quot;);    private static String driver = bundle.getString(&quot;driver&quot;);    private static String url = bundle.getString(&quot;url&quot;);    private static String user = bundle.getString(&quot;user&quot;);    private static String password = bundle.getString(&quot;password&quot;);    static &#123;        //注册驱动（注册驱动只需要注册一次，放在静态代码块当中。DBUtil类加载的时候执行）        try &#123;            //&quot;com.mysql.cj.jdbc.Driver&quot;是链接数据库的驱动，不能写死。因为以后可能还会链接Oracle数据库            //如果链接oracle数据库的时候，还需要修改java代码，违背了OCP开闭原则            //OCP开闭原则：对扩展开放，对修改关闭            Class.forName(driver);        &#125; catch (ClassNotFoundException e)&#123;            e.printStackTrace();        &#125;    &#125;    /**     * 获取链接对象     * @return Connection链接对象     * @throws SQLException     */    public static Connection getConnection() throws SQLException &#123;        //获取链接        return DriverManager.getConnection(url, user, password);    &#125;    /**     * 释放资源     * @param conn 连接对象     * @param ps 数据库操作对象     * @param rs 结果集对象     */    public static void close(Connection conn, Statement ps, ResultSet rs)&#123;        if (rs!=null)&#123;            try &#123;                rs.close();            &#125; catch (SQLException e) &#123;                e.printStackTrace();            &#125;        &#125;        if (ps!=null)&#123;            try &#123;                ps.close();            &#125; catch (SQLException e) &#123;                e.printStackTrace();            &#125;        &#125;        if (conn!=null)&#123;            try &#123;                conn.close();            &#125; catch (SQLException e) &#123;                e.printStackTrace();            &#125;        &#125;    &#125;&#125;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">- jdbc.properties配置文件</span><br><span class="line">  </span><br><span class="line">- ```properties</span><br><span class="line">  driver = com.mysql.cj.jdbc.Driver</span><br><span class="line">  url = jdbc:mysql://localhost:3306/bjpowernode</span><br><span class="line">  user = root</span><br><span class="line">  password = 123456</span><br></pre></td></tr></table></figure></code></pre></li><li><p>三段必备代码</p></li><li><pre><code class="java">resp.setContentType(&quot;text/html&quot;);PrintWriter out = resp.getWriter();String contextPath = req.getContextPath();<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">- 请求和转发/重定向</span><br><span class="line">  </span><br><span class="line">- ```java</span><br><span class="line">  req.getRequestDispatcher(&quot;/dept/list&quot;).forward(req, resp);</span><br><span class="line">  resp.sendRedirect(&quot;&quot;+contextPath+&quot;/dept/list&quot;);</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul></li></ul><h1 id="🤔将OA项目中的资源跳转修改为合适的跳转方式"><a href="#🤔将OA项目中的资源跳转修改为合适的跳转方式" class="headerlink" title="🤔将OA项目中的资源跳转修改为合适的跳转方式"></a>🤔将OA项目中的资源跳转修改为合适的跳转方式</h1><p>重定向（Redirect）和转发（Forward）是两种常用的页面跳转方式，它们有以下区别：</p><ul><li><p>请求对象：重定向是两次请求-响应过程，而转发是一次请求-响应过程。</p></li><li><p>浏览器地址栏：重定向会改变浏览器的地址栏，而转发不会改变浏览器的地址栏。</p></li><li><p>执行位置：重定向是在客户端浏览器中完成的，而转发是在服务器端完成的。</p></li><li><p>数据传递：重定向不能直接传递数据，需要通过URL参数、Session或Cookie等进行传递；而转发可以通过Request对象的属性、请求转发器等直接传递数据。</p></li><li><p>跳转范围：重定向可以跳转到任何URL，可以是同一应用程序内的URL，也可以是其他应用程序的URL；而转发只能在当前应用程序内部进行页面跳转。</p></li><li><p>性能开销：由于重定向是两次请求-响应过程，相对于转发来说，它需要更多的网络开销和时间开销。</p></li></ul><p>删除之后，重定向（一般都用这个）</p><p>修改之后，重定向</p><p>保存之后，重定向</p><p>重定向：成功界面&#x2F;失败界面</p><h1 id="🤔Servlet注解简化开发"><a href="#🤔Servlet注解简化开发" class="headerlink" title="🤔Servlet注解简化开发"></a>🤔Servlet注解简化开发</h1><p>不需要编写大量的xml配置信息，直接在java类上标注即可。@WebServlet</p><p>这并不是说要抛弃xml文件，一些后期需要改动的配置信息，还是要写在xml文件当中的。</p><p>@WebServlet注解具有的属性</p><ul><li><strong>name属性</strong>，用来指定Servlet的名字，相当于<servlet-name></li><li><strong>urlPatterns属性</strong>，用来指定Servlet的映射路径，可以指定多个字符串<url-pattern></li><li>loadOnStartUp属性，用来指定在服务器启动阶段是否加载该Servlet对象，等同于<load-on-startup></li><li>value属性，当注解的属性名是value时，value的属性名是可以省略的。</li></ul><p>注解对象的使用格式：</p><ul><li>@注解名称(属性名&#x3D;属性值,属性名&#x3D;属性值,属性名&#x3D;属性值…)</li></ul><h1 id="😀使用模板方法设计模式优化oa项目"><a href="#😀使用模板方法设计模式优化oa项目" class="headerlink" title="😀使用模板方法设计模式优化oa项目"></a>😀使用模板方法设计模式优化oa项目</h1><p>之前的设计是1个请求对应1个Servlet类，导致类爆炸</p><p>现在可以一个请求对应一个方法，一个业务对应一个Servlet类</p><p>只写一个servlet类代码，然后通过if语句判断请求路径即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.niu.oa.web.action;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.niu.oa.utils.DBUtil;</span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="comment">//模板类</span></span><br><span class="line"><span class="meta">@WebServlet(&#123;&quot;/dept/list&quot;, &quot;/dept/save&quot;, &quot;/dept/edit&quot;, &quot;/dept/detail&quot;, &quot;/dept/delete&quot;, &quot;/dept/modify&quot; &#125;)</span></span><br><span class="line"><span class="comment">//也可以模糊匹配（目前这个有问题）</span></span><br><span class="line"><span class="comment">//@WebServlet(&quot;/dept/*&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DeptServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="comment">//模板方法</span></span><br><span class="line">    <span class="comment">//重写service方法</span></span><br><span class="line">    <span class="comment">//ctrl+o快捷重写</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//可以重写doGet和doPost方法，但那样又要互相调用，他俩的上层方法就是service方法</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span><br><span class="line">            <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//获取servlet path</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">servletPath</span> <span class="operator">=</span> req.getServletPath();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;/dept/list&quot;</span>.equals(servletPath))&#123;</span><br><span class="line">            doList(req, resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&quot;/dept/save&quot;</span>.equals(servletPath))&#123;</span><br><span class="line">            doSave(req, resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&quot;/dept/edit&quot;</span>.equals(servletPath))&#123;</span><br><span class="line">            doEdit(req, resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&quot;/dept/detail&quot;</span>.equals(servletPath))&#123;</span><br><span class="line">            doDetail(req, resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&quot;/dept/delete&quot;</span>.equals(servletPath))&#123;</span><br><span class="line">            doDel(req, resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&quot;/dept/modify&quot;</span>.equals(servletPath))&#123;</span><br><span class="line">            doModify(req,resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">doList</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span><br><span class="line">            <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">        <span class="type">String</span> <span class="variable">contextPath</span> <span class="operator">=</span> req.getContextPath();</span><br><span class="line"></span><br><span class="line">        out.print(<span class="string">&quot;&lt;!DOCTYPE html&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;html lang=&#x27;en&#x27;&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;head&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;    &lt;meta charset=&#x27;UTF-8&#x27;&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;    &lt;title&gt;部门列表页面&lt;/title&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        out.print(<span class="string">&quot;&lt;script type=&#x27;text/javascript&#x27;&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;function del(dno)&#123;&quot;</span>);</span><br><span class="line">        <span class="comment">//作用：弹出确认框，点击确定返回true，点击取消返回false(即无事发生)</span></span><br><span class="line">        out.print(<span class="string">&quot;if (window.confirm(&#x27;注意，删除后不可恢复！&#x27;))&#123;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;document.location.href = &#x27;&quot;</span>+contextPath+<span class="string">&quot;/dept/delete?deptno=&#x27; + dno&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        out.print(<span class="string">&quot;&lt;/script&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;/head&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;body&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;    &lt;h1 align=&#x27;center&#x27;&gt;部门列表&lt;/h1&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;    &lt;hr&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;    &lt;table border=&#x27;1px&#x27; align=&#x27;center&#x27; width=&#x27;50%&#x27;&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;        &lt;tr&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;            &lt;th&gt;序号&lt;/th&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;            &lt;th&gt;部门编号&lt;/th&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;            &lt;th&gt;部门名称&lt;/th&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;            &lt;th&gt;操作&lt;/th&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;        &lt;/tr&gt;&quot;</span>);</span><br><span class="line">        <span class="comment">//上面一部分是死的</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//连接数据库，查询所有部门</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = DBUtil.getConnection();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select deptno,dname,loc from dept&quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line">            rs = ps.executeQuery();</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (rs.next())&#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">deptno</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;deptno&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">dname</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;dname&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">loc</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;loc&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//这部分是活的</span></span><br><span class="line">                out.print(<span class="string">&quot;        &lt;tr&gt;&quot;</span>);</span><br><span class="line">                out.print(<span class="string">&quot;            &lt;td&gt;&quot;</span>+(++i)+<span class="string">&quot;&lt;/td&gt;&quot;</span>);</span><br><span class="line">                out.print(<span class="string">&quot;            &lt;td&gt;&quot;</span>+deptno+<span class="string">&quot;&lt;/td&gt;&quot;</span>);</span><br><span class="line">                out.print(<span class="string">&quot;            &lt;td&gt;&quot;</span>+dname+<span class="string">&quot;&lt;/td&gt;&quot;</span>);</span><br><span class="line">                out.print(<span class="string">&quot;            &lt;td&gt;&quot;</span>);</span><br><span class="line">                <span class="comment">//调用js函数，函数有一个参数</span></span><br><span class="line">                out.print(<span class="string">&quot;                &lt;a href=&#x27;javascript:void(0)&#x27; onclick=&#x27;del(&quot;</span>+deptno+<span class="string">&quot;)&#x27;&gt;删除&lt;/a&gt;&quot;</span>);</span><br><span class="line">                out.print(<span class="string">&quot;                &lt;a href=&#x27;&quot;</span>+contextPath+<span class="string">&quot;/dept/edit?deptno=&quot;</span>+deptno+<span class="string">&quot;&#x27;&gt;修改&lt;/a&gt;&quot;</span>);</span><br><span class="line">                out.print(<span class="string">&quot;                &lt;a href=&#x27;&quot;</span>+contextPath+<span class="string">&quot;/dept/detail?deptno=&quot;</span>+deptno+<span class="string">&quot;&#x27;&gt;详情&lt;/a&gt;&quot;</span>);</span><br><span class="line">                out.print(<span class="string">&quot;            &lt;/td&gt;&quot;</span>);</span><br><span class="line">                out.print(<span class="string">&quot;        &lt;/tr&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            DBUtil.close(conn, ps, rs);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//下面一部分是死的</span></span><br><span class="line">        out.print(<span class="string">&quot;&lt;/table&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;hr&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;h2 align=&#x27;center&#x27;&gt;&lt;a href=&#x27;&quot;</span>+contextPath+<span class="string">&quot;/add.html&#x27;&gt;新增部门&lt;/a&gt;&lt;/h2&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;/body&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;/html&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">doSave</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span><br><span class="line">            <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">contextPath</span> <span class="operator">=</span> req.getContextPath();</span><br><span class="line">        <span class="comment">//获取部门信息</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">deptno</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;deptno&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">dname</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;dname&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">loc</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;loc&quot;</span>);</span><br><span class="line">        <span class="comment">//链接数据库</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = DBUtil.getConnection();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into dept(deptno, dname, loc) values (?, ?, ?) &quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line">            ps.setString(<span class="number">1</span>, deptno);</span><br><span class="line">            ps.setString(<span class="number">2</span>, dname);</span><br><span class="line">            ps.setString(<span class="number">3</span>, loc);</span><br><span class="line">            count = ps.executeUpdate();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            DBUtil.close(conn, ps, <span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//保存成功跳转到列表界面</span></span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">//删除成功(回到部门列表界面，需要执行另一个界面，使用转发机制)</span></span><br><span class="line">            <span class="comment">//req.getRequestDispatcher(&quot;/dept/list&quot;).forward(req, resp);</span></span><br><span class="line">            resp.sendRedirect(<span class="string">&quot;&quot;</span>+contextPath+<span class="string">&quot;/dept/list&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//删除失败</span></span><br><span class="line">            <span class="comment">//req.getRequestDispatcher(&quot;/error.html&quot;).forward(req, resp);</span></span><br><span class="line">            resp.sendRedirect(<span class="string">&quot;&quot;</span>+contextPath+<span class="string">&quot;/error.html&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//保存失败，跳转到错误界面</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">doEdit</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span><br><span class="line">            <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">        <span class="comment">//跳转到修改界面</span></span><br><span class="line">        out.print(<span class="string">&quot;&lt;!DOCTYPE html&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;html lang=&#x27;en&#x27;&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;head&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;    &lt;meta charset=&#x27;UTF-8&#x27;&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;    &lt;title&gt;修改部门&lt;/title&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;/head&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;body&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;h1 align=&#x27;center&#x27;&gt;修改部门&lt;/h1&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;hr&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;div align=&#x27;center&#x27;&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取部门编号</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">deptno</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;deptno&quot;</span>);</span><br><span class="line">        <span class="comment">//链接数据库，根据部门编号查询部门信息</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = DBUtil.getConnection();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select dname, loc from dept where deptno = ?&quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line">            ps.setString(<span class="number">1</span>, deptno);</span><br><span class="line">            rs = ps.executeQuery();</span><br><span class="line">            <span class="comment">//这个结果中只有一条记录</span></span><br><span class="line">            <span class="keyword">if</span> (rs.next())&#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">dname</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;dname&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">loc</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;loc&quot;</span>);</span><br><span class="line">                out.print(<span class="string">&quot;&lt;form action=&#x27;/oa/dept/modify&#x27; method=&#x27;post&#x27;&gt;&quot;</span>);</span><br><span class="line">                out.print(<span class="string">&quot;部门编号&lt;input type=&#x27;text&#x27; name=&#x27;deptno&#x27; value=&#x27;&quot;</span>+deptno+<span class="string">&quot;&#x27; readonly/&gt;&lt;br&gt;&quot;</span>);</span><br><span class="line">                out.print(<span class="string">&quot;部门名称&lt;input type=&#x27;text&#x27; name=&#x27;dname&#x27; value=&#x27;&quot;</span>+dname+<span class="string">&quot;&#x27;/&gt;&lt;br&gt;&quot;</span>);</span><br><span class="line">                out.print(<span class="string">&quot;部门位置&lt;input type=&#x27;text&#x27; name=&#x27;loc&#x27; value=&#x27;&quot;</span>+loc+<span class="string">&quot;&#x27;/&gt;&lt;br&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            DBUtil.close(conn, ps, rs);</span><br><span class="line">        &#125;</span><br><span class="line">        out.print(<span class="string">&quot;&lt;input type=&#x27;submit&#x27; value=&#x27;修改&#x27;/&gt;&lt;br&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;/form&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;/div&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;/body&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;/html&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">doDetail</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span><br><span class="line">            <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">        req.getServletPath();</span><br><span class="line"></span><br><span class="line">        out.print(<span class="string">&quot;&lt;!DOCTYPE html&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;html lang=&#x27;en&#x27;&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;head&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;meta charset=&#x27;UTF-8&#x27;&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;title&gt;部门详情&lt;/title&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;/head&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;body&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;h1 align=&#x27;center&#x27;&gt;部门详情&lt;/h1&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;hr&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;div align=&#x27;center&#x27;&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取部门编号</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">deptno</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;deptno&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//链接数据库</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = DBUtil.getConnection();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select dname,loc from dept where deptno = ?&quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line">            ps.setString(<span class="number">1</span>, deptno);</span><br><span class="line">            rs = ps.executeQuery();</span><br><span class="line">            <span class="comment">//这个结果集只有一条记录</span></span><br><span class="line">            <span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">dname</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;dname&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">loc</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;loc&quot;</span>);</span><br><span class="line">                out.print(<span class="string">&quot;部门编号:&quot;</span>+deptno+<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">                out.print(<span class="string">&quot;部门名称:&quot;</span>+dname+<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">                out.print(<span class="string">&quot;部门位置:&quot;</span>+loc+<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            DBUtil.close(conn, ps, rs);</span><br><span class="line">        &#125;</span><br><span class="line">        out.print(<span class="string">&quot;  &lt;input type=&#x27;button&#x27; value=&#x27;后退&#x27; onclick=&#x27;window.history.back()&#x27;/&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;/div&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;/body&gt;&quot;</span>);</span><br><span class="line">        out.print(<span class="string">&quot;&lt;/html&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">doDel</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span><br><span class="line">            <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">contextPath</span> <span class="operator">=</span> req.getContextPath();</span><br><span class="line">        <span class="comment">//根据部门编号删除部门</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">deptno</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;deptno&quot;</span>);</span><br><span class="line">        <span class="comment">//连接数据库</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = DBUtil.getConnection();</span><br><span class="line">            <span class="comment">//开启事物(自动提交机制关闭)(同时成功或者同时失败)(目前用不到)</span></span><br><span class="line">            conn.setAutoCommit(<span class="literal">false</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;delete from dept where deptno = ?&quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line">            ps.setString(<span class="number">1</span>, deptno);</span><br><span class="line">            count = ps.executeUpdate();</span><br><span class="line">            <span class="comment">//事物提交</span></span><br><span class="line">            conn.commit();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            <span class="comment">//遇到异常就回滚</span></span><br><span class="line">            <span class="keyword">if</span> (conn != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn.rollback();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            DBUtil.close(conn, ps, <span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断是否删除成功</span></span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">//删除成功(回到部门列表界面，需要执行另一个界面，使用转发机制)</span></span><br><span class="line">            <span class="comment">//req.getRequestDispatcher(&quot;/dept/list&quot;).forward(req, resp);</span></span><br><span class="line">            <span class="comment">//使用重定向更合适，两次请求而不是一次</span></span><br><span class="line">            resp.sendRedirect(<span class="string">&quot;&quot;</span>+contextPath+<span class="string">&quot;/dept/list&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//删除失败</span></span><br><span class="line">            <span class="comment">//req.getRequestDispatcher(&quot;/error.html&quot;).forward(req, resp);</span></span><br><span class="line">            resp.sendRedirect(<span class="string">&quot;&quot;</span>+contextPath+<span class="string">&quot;/error.html&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">doModify</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span><br><span class="line">            <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//修改部门</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">contextPath</span> <span class="operator">=</span> req.getContextPath();</span><br><span class="line">        <span class="comment">//获取表单中的数据</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">deptno</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;deptno&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">dname</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;dname&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">loc</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;loc&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//链接数据库</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = DBUtil.getConnection();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update dept set dname = ?, loc = ? where deptno = ?&quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line">            ps.setString(<span class="number">1</span>, dname);</span><br><span class="line">            ps.setString(<span class="number">2</span>, loc);</span><br><span class="line">            ps.setString(<span class="number">3</span>, deptno);</span><br><span class="line">            count = ps.executeUpdate();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            DBUtil.close(conn, ps, <span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">//更新成功，跳转到部门列表界面</span></span><br><span class="line">            <span class="comment">//req.getRequestDispatcher(&quot;/dept/list&quot;).forward(req, resp);</span></span><br><span class="line">            resp.sendRedirect(<span class="string">&quot;&quot;</span>+contextPath+<span class="string">&quot;/dept/list&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//更新失败，返回错误界面</span></span><br><span class="line">            <span class="comment">//req.getRequestDispatcher(&quot;/error.html&quot;).forward(req, resp);</span></span><br><span class="line">            resp.sendRedirect(<span class="string">&quot;&quot;</span>+contextPath+<span class="string">&quot;/error.html&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="🤨分析使用纯粹Servlet开发web应用的缺陷"><a href="#🤨分析使用纯粹Servlet开发web应用的缺陷" class="headerlink" title="🤨分析使用纯粹Servlet开发web应用的缺陷"></a>🤨分析使用纯粹Servlet开发web应用的缺陷</h1><p>java代码混合了html等前端代码，使得程序耦合度非常高，代码不美观，维护成本非常高等一系列缺点。</p><p>我们需要一种机制将前端代码自动翻译成Java代码，如下：</p><p>前端代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>转换后：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">out.print(<span class="string">&quot;&lt;html&gt;&quot;</span>);</span><br><span class="line">out.print(<span class="string">&quot;&lt;head&gt;&lt;/head&gt;&quot;</span>);    </span><br><span class="line">out.print(<span class="string">&quot;&lt;/html&gt;&quot;</span>);</span><br></pre></td></tr></table></figure><p>这个机制就是JSP</p><h1 id="😗B-S结构系统的会话机制（session机制）"><a href="#😗B-S结构系统的会话机制（session机制）" class="headerlink" title="😗B&#x2F;S结构系统的会话机制（session机制）"></a>😗B&#x2F;S结构系统的会话机制（session机制）</h1><ul><li><p>会话机制:</p><ul><li>HTTP是无状态的协议</li><li>用户打开浏览器,进行一系列操作,最终将浏览器关闭,这个过程叫做一次会话.会话在服务器端也有一个对应的Java对象,即session</li><li>用户在浏览器上点击一次,直到界面停下来,可以认为这是一次请求,请求对应的Java对象是request.</li><li>因此,一次会话中包含多次请求</li></ul></li><li><p>session对象的作用：保存会话状态（比如用session记录用户已登录的状态）</p><ul><li>获取session对象</li><li><pre><code class="java">//从web获取session对象，如果没有session对象，就新建一个HttpSession session = req.getSession();//从web获取session对象，如果没有session对象，就不创建并返回一个nullHttpSession session = req.getSession(false);<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- org.apache.catalina.session.StandardSessionFacade@4e89be27 内存地址每次会话都不一样</span><br><span class="line"></span><br><span class="line">- 几个域</span><br><span class="line">  - request（请求域 请求级 HttpServletRequest）&lt;session（会话域 用户级 HttpSession）&lt;application（应用域 项目级 ServletContext）</span><br><span class="line">  - 通过这个作用范围也可知一个用户应该对应一个会话域</span><br><span class="line">  - 这几个域都有的公共方法</span><br><span class="line">    - setAttribute（绑定）</span><br><span class="line">    - getAttribute（获取）</span><br><span class="line">    - </span><br><span class="line">      removeAttribute（删除）</span><br><span class="line">  - 使用原则：尽量使用小的域</span><br><span class="line"></span><br><span class="line">- session的一些机制</span><br><span class="line"></span><br><span class="line">  - 因为HTTP是无状态的协议（服务器无法监视到浏览器关闭），所以session有一个超时自动删除的机制，即长时间未向服务器发送请求后，会把该用户的session删除，也就是要重新登录了。</span><br><span class="line"></span><br><span class="line">  - session对象的销毁机制</span><br><span class="line"></span><br><span class="line">    - 超时销毁（用户不再访问服务器一段时间）</span><br><span class="line"></span><br><span class="line">      - 在xml文件中可以配置</span><br><span class="line"></span><br><span class="line">      - ```xml</span><br><span class="line">        &lt;!--    session的超时时长是30分钟（默认也是30分钟）--&gt;</span><br><span class="line">            &lt;session-config&gt;</span><br><span class="line">                &lt;session-timeout&gt;30&lt;/session-timeout&gt;</span><br><span class="line">            &lt;/session-config&gt;</span><br></pre></td></tr></table></figure>- 手动销毁（网银中的“安全退出”）</code></pre></li></ul></li><li><p>session的实验原理</p><ul><li><p>在web服务器中有一个session列表，类似于map集合，这个map集合的key存储的是session_id，这个map集合的value存储的是对应的session对象。</p></li><li><p>用户发送第一次请求的时候：服务器会创建一个新的session对象，同时给session对象生成一个id，然后web服务器会将session的id发送给浏览器，浏览器将session的id保存在<strong>浏览器的缓存</strong>中。</p><ul><li><pre><code>Response Headers（响应标头）:Set-Cookie: JSESSIONID=6D6ADAD0160C715CC57E0BADC0C7018A;这说明session_id本质是一个放到浏览器缓存里的一个cookie<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 用户发送第二次请求的时候：会自动将**浏览器缓存**中的session_id自动发送给服务器，服务器获取到session_id，然后从session列表中查找到对应的session对象。</span><br><span class="line"></span><br><span class="line">  - ```</span><br><span class="line">    Request Headers（请求标头）</span><br><span class="line">    Cookie: JSESSIONID=6D6ADAD0160C715CC57E0BADC0C7018A;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li><li><p>关闭浏览器，内存消失，cookie消失，session_id消失，会话等同结束。</p></li></ul></li><li><p>cookie禁用后，对session的影响</p><ul><li><p>cookie禁用：服务器正常发送cookie给浏览器，但是浏览器不要了。拒收，并不是服务器不发了。</p></li><li><p>因为没有了sessionid，所以每一次请求都将获取到新的session对象</p></li><li><p>在禁用的情况下如何实现session机制如何实现</p><ul><li><p>使用URL重写机制即可</p></li><li><p>但这样会大大增加开发者的成本，即开发人员在编写任何请求路径时，后面都要加上一个sessionid。所以大部分网站都是禁用cookie就不让用了。</p></li><li><pre><code>http://localhost:8080/servlet08/test/session;jsessionid=6D6ADAD0160C715CC57E0BADC0C7018A<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 😎JSP</span><br><span class="line"></span><br><span class="line">访问一个index.jsp界面，底层执行的是index_jsp.class这个java程序（Servlet程序），自动生成的。</span><br><span class="line"></span><br><span class="line">JSP实际上就是一个Servlet。</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase</span><br><span class="line"></span><br><span class="line">public abstract class HttpJspBase extends HttpServlet implements HttpJspPage</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul></li></ul><p>所以jsp的生命周期与Servlet生命周期完全相同。</p><p>此外，jsp界面第一次访问比较慢，因为需要编译成java文件，编译后的java文件在以下示例目录里（此外，必须先访问jsp文件才会出现java文件以及class文件，若java文件有错误，则不会出现class文件）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Using CATALINA_BASE:   &quot;C:\Users\bairimengchang\AppData\Local\JetBrains\IntelliJIdea2021.2\tomcat\92fbcfde-f5d8-4b1b-9c57-3e22239ccede&quot;</span><br></pre></td></tr></table></figure><p>JSP是什么：</p><ul><li>JSP是java程序（本质是一个Servlet）</li><li>JSP：JavaServer Page 的缩写（基于java语言实现的服务器端界面）</li><li>Servlet是JavaEE的13个子规范之一，那么JSP也是JavaEE的13个子规范之一</li><li>JSP是一套规范，所有的web服务器都遵循这套规范，都内置一个jsp翻译引擎，都是按照这套规范进行的翻译</li></ul><p>JSP与Servlet的区别：</p><ul><li>职责不同<ul><li>Servlet的职责：收集数据（逻辑处理，业务处理，连接数据库，获取&#x2F;收集数据）</li><li>JSP的职责：展示数据（做数据的展示）</li></ul></li></ul><p>jsp中直接写的东西会出现在class文件中的形式（被当作普通字符串打印输出到浏览器，然后浏览器进行解释执行）比如：</p><p>jsp：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span> %&gt;</span><br><span class="line">abc</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;hello&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=<span class="string">&quot;center&quot;</span>&gt;</span><br><span class="line">    你好&lt;br&gt;</span><br><span class="line">    &lt;a href=<span class="string">&quot;/oa/dept/list&quot;</span>&gt;list&lt;/a&gt;</span><br><span class="line">&lt;/h1&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>java：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">out.write(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">out.write(<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line">out.write(<span class="string">&#x27;c&#x27;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;head&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;    &lt;meta charset=\&quot;UTF-8\&quot;&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;    &lt;title&gt;hello&lt;/title&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;/head&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;body&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;h1 align=\&quot;center\&quot;&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;    你好&lt;br&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;    &lt;a href=\&quot;/oa/dept/list\&quot;&gt;list&lt;/a&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;/h1&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;/body&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;/html&gt;&quot;</span>);</span><br></pre></td></tr></table></figure><p>解决中文乱码问题（在jsp文件的开头加上一句话）</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span> %&gt;</span><br></pre></td></tr></table></figure><p>在jsp中编写java程序</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;%java语句放在这里，会被翻译到Servlet类的service方法内部，这是一个方法体%&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--HTML的注释，这个注释不专业，仍然会被翻译到java源代码当中，在jsp中不要使用这种注释--&gt;</span><br><span class="line">&lt;%--System.out.println(<span class="string">&quot;I am going to torture syp!&quot;</span>);这才是标准jsp专业，这个注释信息不会被翻译到java源文件中--%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%!这里面的代码会被翻译到service方法之外，会存在线程安全（修改操作）问题，所以不常用%&gt;</span><br></pre></td></tr></table></figure><p>jsp有九大内置对象，都是之前用过的</p><ul><li>out对象，作为输出对象，可以直接拿来在service方法里用<ul><li>向浏览器输出一个java对象</li><li>&lt;% String name &#x3D; “jack”; out.write(“name:”+name);%&gt;</li><li>输出的内容中没有java代码直接写就可以，如果输出的内容中含有”java”代码，可以使用以下语法格式<ul><li>&lt;%&#x3D; %&gt;，注意在&#x3D;后面写要输出的内容</li><li>这个符号最终被翻译成out.print();，注意这里带分号</li><li>&lt;%&#x3D;”Hello world!”%&gt; 左右两句话是等效的 &lt;%–out.print(“Hello world!”);–%&gt;</li></ul></li></ul></li></ul><p>jsp文件的扩展名可以是别的，tomcat配置文件如下，对于tomcat来讲jsp文件就只是一个普通的文本文件，最终调用的还是翻译之后的java文件，与jsp就没什么关系了</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>jsp<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.jsp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.jspx<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>JSP指令</p><ul><li><p>指令的作用：指导jsp翻译引擎如何翻译jsp文件</p></li><li><pre><code class="jsp">&lt;%@page%&gt; &lt;%@include file=&quot;&quot;%&gt; 包含指令，在JSP中完成静态包含（很少用）&lt;%@taglib prefix=&quot;&quot;%&gt; 引入标签库的指令<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 指令的语法格式</span><br><span class="line"></span><br><span class="line">  - &lt;%@指令名 属性名=属性值 属性名=属性值 属性名=属性值...%&gt;</span><br><span class="line"></span><br><span class="line">- 关于page指令</span><br><span class="line"></span><br><span class="line">  - ```jsp</span><br><span class="line">    &lt;%@page session=&quot;true|false&quot; %&gt;</span><br><span class="line">    是否启用jsp内置对象session，默认值是true</span><br><span class="line">    </span><br><span class="line">    &lt;%@page contentType=&quot;text/html; ISO-8859-1&quot; %&gt;</span><br><span class="line">    设置响应的内容类型，默认值是text/html</span><br><span class="line">    </span><br><span class="line">    &lt;%@page pageEncoding=&quot;UTF-8&quot; %&gt;</span><br><span class="line">    设置字符集</span><br><span class="line">    </span><br><span class="line">    &lt;%@page import=&quot;java.util.List, java.util.Enumeration&quot; %&gt;</span><br><span class="line">    导包</span><br><span class="line">    </span><br><span class="line">    &lt;%@page errorPage=&quot;/error.jsp&quot; %&gt;</span><br><span class="line">    当前jsp出错之后跳转到error.jsp界面</span><br><span class="line">    </span><br><span class="line">    &lt;%@page isErrorPage=&quot;true&quot; %&gt;</span><br><span class="line">    启用jsp九大内置对象exception</span><br><span class="line">    从而后台打印输出错误信息exception.printStackTrace();</span><br></pre></td></tr></table></figure></code></pre></li></ul></li><li><p>jsp九大内置对象</p><ul><li><pre><code class="java">jakarta.servlet.jsp.PageContext pageContext//页面作用域<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- ```java</span><br><span class="line">  jakarta.servlet.http.HttpServletRequest request//请求作用域</span><br></pre></td></tr></table></figure></code></pre></li><li><pre><code class="java">jakarta.servlet.http.HttpSession session//会话作用域<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- ```java</span><br><span class="line">  jakarta.servlet.ServletContext application//应用作用域</span><br></pre></td></tr></table></figure></code></pre></li><li><pre><code class="java">jakarta.lang.Throwable.exeception//处理异常<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- ```java</span><br><span class="line">  jakarta.servlet.ServletConfig config//获取servlet标签里的配置信息</span><br></pre></td></tr></table></figure></code></pre></li><li><pre><code class="java">java.lang.Object page//就是this，表示当前的servlet对象<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">- ```java</span><br><span class="line">  jakarta.servlet.jsp.JspWriter out//负责输出</span><br></pre></td></tr></table></figure></code></pre></li><li><pre><code class="java">jakarta.servlet.http.HttpServletResponse response//负责响应<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"># 🤩使用session会话机制解决登录的问题</span><br><span class="line"></span><br><span class="line">登录成功后保存一个session对象，然后进入到部门列表时读取session对象即可</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">public class UserServlet extends HttpServlet</span><br><span class="line"></span><br><span class="line">protected void doLogin(HttpServletRequest req, HttpServletResponse resp)</span><br><span class="line">            throws ServletException, IOException &#123;</span><br><span class="line">/*...*/</span><br><span class="line">        if (success)&#123;</span><br><span class="line">            //成功，跳转到用户列表</span><br><span class="line">            //重定向机制</span><br><span class="line"></span><br><span class="line">            //获取session对象，必须获取到session</span><br><span class="line">            HttpSession session = req.getSession();</span><br><span class="line">            session.setAttribute(&quot;username&quot;, username);</span><br><span class="line"></span><br><span class="line">            resp.sendRedirect(contextPath+&quot;/dept/list&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            //失败</span><br><span class="line">            resp.sendRedirect(contextPath+&quot;/error.jsp&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DeptServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span><br><span class="line">            <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//入口的验证，这个session不需要新建</span></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession(<span class="literal">false</span>);</span><br><span class="line">        <span class="keyword">if</span> (session!=<span class="literal">null</span>&amp;&amp;session.getAttribute(<span class="string">&quot;username&quot;</span>)!=<span class="literal">null</span>)&#123;</span><br><span class="line"><span class="comment">/*...*/</span></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//跳转到登录界面，自动找到欢迎界面</span></span><br><span class="line">            resp.sendRedirect(req.getContextPath());</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此外可以利用session机制设置一个安全退出按钮</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doExit</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span><br><span class="line">        <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">    <span class="comment">//获取session对象，然后销毁</span></span><br><span class="line">    <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">if</span> (session != <span class="literal">null</span>)&#123;</span><br><span class="line">        session.invalidate();</span><br><span class="line">        <span class="comment">//跳转回登录界面</span></span><br><span class="line">        resp.sendRedirect(req.getContextPath());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有了模板方法设计模式，进行这些修改非常容易。</p><h1 id="🤔Cookie"><a href="#🤔Cookie" class="headerlink" title="🤔Cookie"></a>🤔Cookie</h1><ul><li><p>session的实现就是cookie</p></li><li><p>cookie机制和session机制都是HTTP协议中的一部分，HTTP协议规定：任何应该cookie都是由name和value组成的，name和value都是字符串类型的，在浏览器发送请求时，会自动携带该路径（path）下的cookie数据给服务器</p></li><li><p>在java的servlet中对cookie提供的支持</p><ul><li>jakarta.servlet.http.Cookie;</li><li>把cookie数据发送到浏览器 response.addCookie(cookie);</li></ul></li><li><p>cookie的有效时间</p><ul><li><pre><code class="java">//设置cookie在一小时之后失效，保存在内存文件中cookie.setMaxAge(60*60);//设置Cookie的有效期&lt;0，表示cookie不会被存储在硬盘文件中，会放在浏览器的运行内存中cookie.setMaxAge(-1);//和不调用setMaxAge是同一个效果//设置Cookie的有效期=0，表示cookie被删除，同名cookie被删除<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">- 关于Cookie的路径path</span><br><span class="line"></span><br><span class="line">  - cookie.setPath(&quot;/servlet10&quot;)，表示只要浏览器的请求路径是这个路径，以及这个路径下的子路径，cookie都会被提交到服务器</span><br><span class="line">- 在servlet中获取Cookie并打印输出name和value</span><br><span class="line"></span><br><span class="line">  - ```java</span><br><span class="line">    //通过request获取</span><br><span class="line">            //这个方法有可能会返回一个null，即浏览器没有向服务器提交cookie</span><br><span class="line">            Cookie[] cookies = req.getCookies();</span><br><span class="line">    </span><br><span class="line">            //如果不是null</span><br><span class="line">            if (cookies != null) &#123;</span><br><span class="line">                //遍历数组</span><br><span class="line">                for (Cookie cookie : cookies)&#123;</span><br><span class="line">                    //获取cookie的name与value</span><br><span class="line">                    String name = cookie.getName();</span><br><span class="line">                    String value = cookie.getValue();</span><br><span class="line">                    System.out.println(name + &quot;=&quot; + value);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul><h1 id="🤗使用cookie完成oa项目的十天之内免登录"><a href="#🤗使用cookie完成oa项目的十天之内免登录" class="headerlink" title="🤗使用cookie完成oa项目的十天之内免登录"></a>🤗使用cookie完成oa项目的十天之内免登录</h1><ul><li><p>思路与教训：</p><ul><li><p>设置一个欢迎用的servlet，让这个servlet去判断处理cookie，然后跳转登录界面或列表界面</p><ul><li><p>用户浏览器在发出HTTP请求时，会将与请求相关的全部Cookie信息一起发送给服务器。这意味着浏览器会将存储在特定域名下的所有Cookie都发送给服务器，而不仅仅是某个特定的Cookie。</p><p>服务器收到这些Cookie后，可以根据需要对其中的某个或多个Cookie进行解析和处理。通常情况下，服务器会根据Cookie的名称来识别和提取特定的Cookie值，以完成相应的业务逻辑，比如用户身份验证、个性化设置等。</p></li><li><p>此外，如果用户在两个不同的网站上使用相同的用户名和密码，并且这两个网站使用相同的 Cookie 键来存储用户名和密码，那么就可能会导致一个网站登录成功后，在另一个网站上自动登录成功的情况。</p></li></ul></li><li><p>在用户服务器类里处理用户勾选10天之内免登录（这个操作要向服务器发送个键值对，用来让服务器执行发cookie的操作）后，发放装有账号密码的cookie</p><ul><li><pre><code class="java">//登录成功才考虑，是否给cookieString f = req.getParameter(&quot;f&quot;);if (&quot;1&quot;.equals(f))&#123;    //一个cookie保存一对键值对    Cookie cookie1 = new Cookie(&quot;username&quot;, username);    Cookie cookie2 = new Cookie(&quot;password&quot;, password);//实际情况是加密存储    //设置有效期10天    cookie1.setMaxAge(60*60*24*10);    cookie2.setMaxAge(60*60*24*10);    //设置cookie的路径    cookie1.setPath(req.getContextPath());    cookie2.setPath(req.getContextPath());    //把放好账号的cookie和放好密码的Cookie交给用户（设置好有效期和路径的cookie）    resp.addCookie(cookie1);    resp.addCookie(cookie2);&#125;resp.sendRedirect(contextPath+&quot;/dept/list&quot;);<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 用户安全退出以后，cookie会直接失效</span><br><span class="line"></span><br><span class="line">  - ```java</span><br><span class="line">    //获取session对象，然后销毁（实际上也摧毁了cookie）</span><br><span class="line">    HttpSession session = req.getSession(false);</span><br><span class="line">    if (session != null)&#123;</span><br><span class="line">        session.invalidate();</span><br><span class="line">        //跳转回登录界面</span><br><span class="line">        resp.sendRedirect(req.getContextPath());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul></li></ul><h1 id="😘EL表达式"><a href="#😘EL表达式" class="headerlink" title="😘EL表达式"></a>😘EL表达式</h1><ul><li><p>EL表达式</p><ul><li>E芯片热苏斯哦那Language（表达式语言）</li><li>用来代替jsp中的java代码，从而让代码更加美观</li><li>EL表达式归属于jsp</li></ul></li><li><p>EL表达式在jsp中的作用</p><ul><li>从某个域中取数据<ul><li>指四大作用域</li></ul></li><li>将取出的数据转成字符串<ul><li>如果是一个java对象，会自动调用java对象的toString方法将其转换成字符串</li></ul></li><li>将字符串输出到浏览器<ul><li>和&lt;%&#x3D;%&gt;一样，将其输出到浏览器</li></ul></li></ul></li><li><p>基本语法格式</p><ul><li><p>${表达式}</p><ul><li><pre><code class="jsp">&lt;%@ page import=&quot;com.niu.javaweb.jsp.bean.User&quot; %&gt;&lt;%@page contentType=&quot;text/html; ISO-8859-1&quot;%&gt;&lt;%    //创建user对象    User user = new User();    user.setName(&quot;jak&quot;);    user.setPassword(12345);    user.setAge(12);    //将user放到request作用域中    request.setAttribute(&quot;userObj&quot;, user);%&gt;&lt;%--从域中取数据，取出user对象，然后调用user对象的toString方法，转换成字符串，然后输出到浏览器--%&gt;$&#123;userObj&#125;&lt;%--省略掉了get。所以看起来像是直接获取了属性。实际上底层还是调用get方法，如果没有对应的方法，则会报500错误，与属性无关，这里注意命名的规范--%&gt;&lt;br&gt;$&#123;userObj.name&#125;&lt;br&gt;$&#123;userObj.password&#125;&lt;br&gt;$&#123;userObj.email&#125;&lt;br&gt;&lt;%--在EL表达式里不能加双引号，因为这样EL表达式会将其当作普通的字符串输出到浏览器--%&gt;$&#123;&quot;userObj&quot;&#125;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 在没有指定范围时，EL表达式优先从小范围中取数据</span><br><span class="line"></span><br><span class="line">  - pageContext&lt;request&lt;session&lt;application</span><br><span class="line"></span><br><span class="line">  - ```jsp</span><br><span class="line">    &lt;%--EL表达式中有四个隐含的范围，这样就可以指定范围取数据了--%&gt;</span><br><span class="line">    $&#123;pageScope.data&#125;&lt;br&gt;</span><br><span class="line">    $&#123;requestScope.data&#125;&lt;br&gt;</span><br><span class="line">    $&#123;sessionScope.data&#125;&lt;br&gt;</span><br><span class="line">    $&#123;applicationScope.data&#125;&lt;br&gt;</span><br></pre></td></tr></table></figure></code></pre></li><li><p>取数据有两种方式</p><ul><li><p>第一种，直接用()，正常情况</p></li><li><p>第二种，用[]，名字含有特殊字符时</p><ul><li><pre><code class="jsp">&lt;%--当名字有冲突时，可以这样取数据，这里[]没加双引号的话，会将其看作变量，如果带双引号的话，就去找对应的属性--%&gt;$&#123;requestScope[&quot;abc.def&quot;]&#125;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  - 从Map集合中取数据</span><br><span class="line"></span><br><span class="line">    - $&#123;map, key&#125;</span><br><span class="line"></span><br><span class="line">  - 从数组/集合中取数据</span><br><span class="line"></span><br><span class="line">    - $&#123;数组昵称[0]&#125;</span><br><span class="line">    - $&#123;数组昵称[1]&#125;</span><br><span class="line">    - $&#123;数组昵称[2]&#125;</span><br><span class="line">    - $&#123;数组昵称[3]&#125;</span><br><span class="line"></span><br><span class="line">- 是否忽略所有的EL表达式，使其解释为一个普通字符串</span><br><span class="line"></span><br><span class="line">  - ```jsp</span><br><span class="line">    &lt;%@page isELIgnored=&quot;true&quot; %&gt;默认不忽略</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul></li><li><p>其实如果只想忽略其中某一个，直接在表达式前加个反斜杠\即可</p><ul><li><pre><code>\$&#123;userObj&#125;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 使用EL表达式获取应用的根</span><br><span class="line"></span><br><span class="line">  - ```jsp</span><br><span class="line">    &lt;%--</span><br><span class="line">        在EL表达式当中没有request这个隐式对象（jsp的九大内置对象）</span><br><span class="line">        requestScope 这个只代表“请求范围”，不等同于request对象</span><br><span class="line">        在EL表达式中有一个隐式对象，pageContext</span><br><span class="line">        EL表达式中的pageContext和jsp中九大内置对象pageContext是同一个对象</span><br><span class="line">    --%&gt;</span><br><span class="line">    $&#123;pageContext.request.contextPath&#125;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul></li></ul></li><li><p>EL表达式的隐式对象</p><ul><li><p>pageContext</p><ul><li>见上面描述</li></ul></li><li><p>param</p><ul><li><pre><code class="jsp">&lt;%--http://localhost:8080/jsp/6.jsp?username=lisi--%&gt;用户名：&lt;%=request.getParameter(&quot;username&quot;)%&gt;&lt;br&gt;用户名：$&#123;param.username&#125;&lt;br&gt;&lt;%--http://localhost:8080/jsp/6.jsp?username=lisi&amp;aihao=hejiu&amp;aihao=chouyan&amp;aihao=tangtou--%&gt;&lt;%--param只会获取一维数组的第一个元素--%&gt;爱好：$&#123;param.aihao&#125;&lt;br&gt;爱好：&lt;%=request.getParameter(&quot;aihao&quot;)%&gt;&lt;br&gt;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- paraValues</span><br><span class="line"></span><br><span class="line">  - ```jsp</span><br><span class="line">    &lt;%--等同于&lt;%=request.getParameterValues(&quot;aihao&quot;)%&gt;，都是一维数组--%&gt;</span><br><span class="line">    爱好：$&#123;paramValues.aihao&#125;&lt;br&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;%--通过下标获取数组元素--%&gt;</span><br><span class="line">    爱好：$&#123;paramValues.aihao[0]&#125;、$&#123;paramValues.aihao[1]&#125;、$&#123;paramValues.aihao[2]&#125;&lt;br&gt;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li><li><p>initPram</p><ul><li><pre><code class="jsp">&lt;%--获取xml文件里的application配置信息--%&gt;&lt;%    String pageSize = application.getInitParameter(&quot;pageSize&quot;);%&gt;&lt;%=pageSize%&gt;$&#123;initParam.pageSize&#125;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- ```xml</span><br><span class="line">  &lt;!--    Servlet上下文参数，被封装到ServletContext参数中了对应jsp九大内置对象application--&gt;</span><br><span class="line">      &lt;context-param&gt;</span><br><span class="line">          &lt;param-name&gt;pageSize&lt;/param-name&gt;</span><br><span class="line">          &lt;param-value&gt;20&lt;/param-value&gt;</span><br><span class="line">      &lt;/context-param&gt;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul></li><li><p>EL表达式中的运算符</p><ul><li>关于EL表达式中的运算符(一般的运算还是放在java代码中)<ul><li><p>算术运算符</p></li><li><p>关系运算符</p><ul><li>&#x3D;&#x3D; !&#x3D; &gt; &gt;&#x3D; &lt; &lt;&#x3D; eq</li><li>EL表达式&#x3D;&#x3D;与!&#x3D;实际上调用的equals方法</li></ul></li><li><p>逻辑运算符</p><ul><li>! &amp;&amp; || not and or</li></ul></li><li><p>条件运算符</p><ul><li>? :</li></ul></li><li><p>取值运算符</p><ul><li>[] .</li></ul></li><li><p>empty 运算符</p><ul><li>判断是否为空，为空则为true否则false</li></ul></li></ul></li></ul></li></ul><h1 id="🤩JSTL标签库"><a href="#🤩JSTL标签库" class="headerlink" title="🤩JSTL标签库"></a>🤩JSTL标签库</h1><ul><li><p>JSTL标签库</p><ul><li><p>Java Standard Tag Lib（Java标准的标签库），目的是让jsp中的java代码消失。实际上还是执行java代码</p></li><li><p>对应的jar包：</p><ul><li>jakarta.servlet.jsp.jstl-2.0.0.jar</li><li>jakarta.servlet.jsp.jstl-api-2.0.0.jar</li><li>因为tomcat没有对应的jar包，所以要像jdbc一样，加入到lib目录下，而不是项目结构里（jsp和servlet的jar包都是为了编译通过才加入的，所以不需要放入lib下打包）</li></ul></li><li><pre><code class="jsp">&lt;%--引入jstl的核心标签库--%&gt;&lt;%--prefix=&quot;这里随便起名即可，一般是c&quot;--%&gt;&lt;%@taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- JSTL标签库的原理</span><br><span class="line"></span><br><span class="line">  - ```</span><br><span class="line">    &lt;%@taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;</span><br><span class="line">    这实际上指向了一个xxx.tld文件</span><br><span class="line">    tld实际上是一个xml配置文件</span><br><span class="line">    这个文件中描述了标签与java类的关系</span><br></pre></td></tr></table></figure></code></pre></li><li><p>以catch部分的配置文件为例</p></li><li><pre><code class="xml">  &lt;tag&gt;    &lt;description&gt;        &lt;!--标签的描述--&gt;        Catches any Throwable that occurs in its body and optionally        exposes it.    &lt;/description&gt;    &lt;name&gt;&lt;!--标签的名字--&gt;catch&lt;/name&gt;    &lt;tag-class&gt;&lt;!--标签对应的java类--&gt;org.apache.taglibs.standard.tag.common.core.CatchTag&lt;/tag-class&gt;    &lt;body-content&gt;&lt;!--标签体当中可以出现的内容，如果是JSP，就表示标签体中可以出现符合jsp所有语法的代码，比如EL表达式--&gt;JSP&lt;/body-content&gt;    &lt;attribute&gt;&lt;!--标签的属性--&gt;        &lt;description&gt;            &lt;!--标签属性的描述--&gt;Name of the exported scoped variable for theexception thrown from a nested action. The type of thescoped variable is the type of the exception thrown.        &lt;/description&gt;        &lt;name&gt;&lt;!--标签的属性名称--&gt;var&lt;/name&gt;        &lt;required&gt;false&lt;!--这里表示该属性不是必须的--&gt;&lt;/required&gt;        &lt;rtexprvalue&gt;false&lt;!--表示该属性不支持EL表达式--&gt;&lt;/rtexprvalue&gt;    &lt;/attribute&gt;  &lt;/tag&gt;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 常用的标签</span><br><span class="line"></span><br><span class="line">  - c:if</span><br><span class="line"></span><br><span class="line">    - ```jsp</span><br><span class="line">      &lt;%--没有else标签，可以用两个if代替--%&gt;</span><br><span class="line">      &lt;%--var属性存储的是test属性的值（true/false），不是必须的--%&gt;</span><br><span class="line">      &lt;%--scope指定var的存储域（四大作用域），不是必须的--%&gt;</span><br><span class="line">      &lt;c:if test=&quot;$&#123;not empty param.username&#125;&quot; var=&quot;v&quot; scope=&quot;request&quot;&gt;</span><br><span class="line">          &lt;h1&gt;欢迎你$&#123;param.username&#125;。&lt;/h1&gt;</span><br><span class="line">      &lt;/c:if&gt;</span><br><span class="line">      $&#123;v&#125;</span><br></pre></td></tr></table></figure></code></pre></li><li><p>c:forEach</p><ul><li><pre><code class="jsp">&lt;c:forEach var=&quot;i&quot; begin=&quot;1&quot; end=&quot;10&quot; step=&quot;1&quot;&gt;    $&#123;i&#125;&lt;br&gt;&lt;/c:forEach&gt;var属性代表的是集合中的每一个学生对象varStatus属性表示var的状态对象，有一个count属性&lt;c:forEach items=&quot;$&#123;stuList&#125;&quot; var=&quot;s&quot; varStatus=&quot;stuStatus&quot;&gt;&lt;%--    varStatus的count属性值从1开始，然后递增，用于编号--%&gt;    编号：$&#123;stuStatus.count&#125;,id:$&#123;s.id&#125;,name:$&#123;s.name&#125;&lt;/c:forEach&gt;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- c:choose</span><br><span class="line"></span><br><span class="line">  - ```jsp</span><br><span class="line">    &lt;%--就是if ,else if语句--%&gt;</span><br><span class="line">    &lt;c:choose&gt;</span><br><span class="line">        &lt;c:when test=&quot;$&#123;param.age &lt; 18&#125;&quot;&gt;</span><br><span class="line">            青少年</span><br><span class="line">        &lt;/c:when&gt;</span><br><span class="line">        &lt;c:when test=&quot;$&#123;param.age &gt;= 18 &amp;&amp; param.age &lt; 35&#125;&quot;&gt;</span><br><span class="line">            青年</span><br><span class="line">        &lt;/c:when&gt;</span><br><span class="line">        &lt;c:when test=&quot;$&#123;param.age &gt;= 35 &amp;&amp; param.age &lt; 50&#125;&quot;&gt;</span><br><span class="line">            中年</span><br><span class="line">        &lt;/c:when&gt;</span><br><span class="line">        &lt;c:otherwise&gt;</span><br><span class="line">            老年</span><br><span class="line">        &lt;/c:otherwise&gt;</span><br><span class="line">    &lt;/c:choose&gt;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul></li></ul><h1 id="🤩Filter过滤器"><a href="#🤩Filter过滤器" class="headerlink" title="🤩Filter过滤器"></a>🤩Filter过滤器</h1><ul><li><p>Filter</p><ul><li>Filter可以在Servlet这个目标程序执行之前或者执行之后添加代码（过滤规则，也可以理解为公共代码，比如登录验证）</li></ul></li><li><p>写一个过滤器</p><ul><li><pre><code class="java">package com.niu.servlet;import jakarta.servlet.*;import jakarta.servlet.annotation.WebFilter;import java.io.IOException;//这种模糊匹配不要以&quot;/&quot;开始，这里表示所有以.do结尾的Servlet请求路径都要经过过滤器@WebFilter(&quot;*.do&quot;)public class Filter_1 implements jakarta.servlet.Filter &#123;    @Override    public void init(FilterConfig filterConfig) throws ServletException &#123;        System.out.println(&quot;init方法执行&quot;);    &#125;    @Override    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)            throws IOException, ServletException &#123;        //在请求的时候添加过滤规则        System.out.println(&quot;doFilter方法开始执行&quot;);        //执行下一个过滤器，如果下一个不是过滤器，则执行目标Servlet        chain.doFilter(request, response);        //在响应的时候添加过滤规则        System.out.println(&quot;doFilter方法执行完毕&quot;);        /*            效果：            doFilter方法开始执行            AServlet执行            doFilter方法执行完毕         */    &#125;    @Override    public void destroy() &#123;        System.out.println(&quot;destroy方法执行&quot;);    &#125;&#125;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 关于方法：</span><br><span class="line"></span><br><span class="line">  - init方法：在Filter对象第一次被创建之后调用，并且只调用一次。</span><br><span class="line">  - doFilter方法：只要用户发送一次请求，就执行一次（所以在此编辑过滤规则）。</span><br><span class="line">  - destory方法：在Filter对象被销毁前调用，并且只调用一次。</span><br><span class="line">  - Filte与Servlet的生命周期一致</span><br><span class="line"></span><br><span class="line">- 在xml文件中对Filter进行配置，类似于Servlet</span><br><span class="line"></span><br><span class="line">  - ```xml</span><br><span class="line">    &lt;filter&gt;</span><br><span class="line">        &lt;filter-name&gt;filter&lt;/filter-name&gt;</span><br><span class="line">        &lt;filter-class&gt;com.niu.servlet.Filter_1&lt;/filter-class&gt;</span><br><span class="line">    &lt;/filter&gt;</span><br><span class="line">    &lt;filter-mapping&gt;</span><br><span class="line">        &lt;filter-name&gt;filter&lt;/filter-name&gt;</span><br><span class="line">        &lt;url-pattern&gt;*.do&lt;/url-pattern&gt;</span><br><span class="line">    &lt;/filter-mapping&gt;</span><br></pre></td></tr></table></figure></code></pre></li><li><p>使用注解也可以（但因为责任链设计模式，一般还是在xml文件里配置）</p><ul><li><pre><code class="java">//这种模糊匹配不要以&quot;/&quot;开始，这里表示所有以.do结尾的Servlet请求路径都要经过过滤器@WebFilter(&quot;*.do&quot;)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 补充</span><br><span class="line"></span><br><span class="line">  - Servlet对象默认情况下，在服务器启动时是不会新建对象的</span><br><span class="line">  - Filter对象默认情况下，在服务器启动时会创建对象</span><br><span class="line">  - Servlet和Filter都是单例的（单实例）。</span><br><span class="line">  - Filter的优先级高于Servlet，同一个请求路径，一定是先去执行Filter再去执行Servlet</span><br><span class="line"></span><br><span class="line">- 关于路径的配置</span><br><span class="line"></span><br><span class="line">  - /a.do、/b.do 这些都是精确匹配</span><br><span class="line">  - /* 匹配所有路径</span><br><span class="line">  - *.do 后缀匹配，注意不要以/开始</span><br><span class="line">  - /dept/* 前缀匹配</span><br><span class="line">  - 此外xml文件里配置路径时，Filter的执行顺序按&lt;filter-mapping&gt;标签优先级从上往下；注解则是按照字母排序，从A-Z</span><br><span class="line">  - 过滤器的调用顺序遵循栈数据结构（先进后出）</span><br><span class="line"></span><br><span class="line">- 责任链设计模式</span><br><span class="line"></span><br><span class="line">  - 先看这个程序的问题</span><br><span class="line"></span><br><span class="line">    - ```java</span><br><span class="line">      package com.niu.servlet;</span><br><span class="line">      </span><br><span class="line">      public class Test &#123;</span><br><span class="line">          public static void main(String[] args) &#123;</span><br><span class="line">              System.out.println(&quot;method begin&quot;);</span><br><span class="line">              m1();</span><br><span class="line">              System.out.println(&quot;method over&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">      </span><br><span class="line">          private static void m1() &#123;</span><br><span class="line">              System.out.println(&quot;method begin&quot;);</span><br><span class="line">              m2();</span><br><span class="line">              System.out.println(&quot;method over&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">      </span><br><span class="line">          private static void m2() &#123;</span><br><span class="line">              System.out.println(&quot;method begin&quot;);</span><br><span class="line">              m3();</span><br><span class="line">              System.out.println(&quot;method over&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">      </span><br><span class="line">          private static void m3() &#123;</span><br><span class="line">              System.out.println(&quot;目标程序执行&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">          </span><br><span class="line">      &#125;</span><br><span class="line">      /*</span><br><span class="line">      method begin</span><br><span class="line">      method begin</span><br><span class="line">      method begin</span><br><span class="line">      目标程序执行</span><br><span class="line">      method over</span><br><span class="line">      method over</span><br><span class="line">      method over</span><br><span class="line">       */</span><br></pre></td></tr></table></figure>- 这个程序在编译阶段就确定了调用顺序，想要修改调用顺序，必须对Java代码作出大量修改，这不符合开闭原则</code></pre></li><li><p>而过滤器在编译阶段不会确定调用顺序，因为这个调用顺序是配置在xml文件里的，是动态可调的（不用调整Java代码），这种设计模式被称作责任链设计模式。</p></li></ul></li></ul></li></ul><h1 id="😊LIstener监听器"><a href="#😊LIstener监听器" class="headerlink" title="😊LIstener监听器"></a>😊LIstener监听器</h1><ul><li><p>crtl+o 代码快速补全</p></li><li><p>监听器Listener与过滤器Filter一样，都是Servlet规范中的一员。</p><p>监听器实际上是Servlet规范留给我们程序员的特殊时机。</p><p>监听器中的方法不需要程序员手动调用，是发生某个特殊事件后被服务器调用。</p></li><li><p>Servlet规范中提供了以下监听器：</p><ul><li><p>Jakarta.servlet包下：</p><ul><li><p>ServletContextListener</p><ul><li><p>该监听器监听的是ServletContext对象的状态</p></li><li><pre><code class="java">package com.niu.servlet;import jakarta.servlet.ServletContextEvent;import jakarta.servlet.ServletContextListener;import jakarta.servlet.annotation.WebListener;@WebListenerpublic class MyServletContextListener implements ServletContextListener &#123;    @Override    public void contextInitialized(ServletContextEvent sce) &#123;        //这个方法是在ServletContext对象被创建时调用        System.out.println(&quot;ServletContext对象创建了&quot;);    &#125;    @Override    public void contextDestroyed(ServletContextEvent sce) &#123;        //这个方法是在ServletContext对象被销毁时调用        System.out.println(&quot;ServletContext对象被销毁了&quot;);    &#125;&#125;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    - ServletContextAttributeListener</span><br><span class="line"></span><br><span class="line">    - ServletRequestListener</span><br><span class="line"></span><br><span class="line">    - ServletRequestAttributeListener</span><br><span class="line"></span><br><span class="line">  - Jakarta.servlet.http包下：</span><br><span class="line"></span><br><span class="line">    - HttpSessionListener</span><br><span class="line"></span><br><span class="line">    - HttpSessionAttributeListener</span><br><span class="line"></span><br><span class="line">      - 该监听器的使用需要使用@WebListener注解进行标注。</span><br><span class="line"></span><br><span class="line">      - 该监听器监听session域中数据的变化，只要数据变化，则执行相应的方法。</span><br><span class="line"></span><br><span class="line">    - HttpSessionBindingListener</span><br><span class="line"></span><br><span class="line">      - 该监听器不需要使用注解进行标注</span><br><span class="line"></span><br><span class="line">      - 假设User类实现了该监听器，那么User对象在被放入session的时候会触发bind事件，User对象从session中删除时，触发unbind事件</span><br><span class="line"></span><br><span class="line">      - 假设Customer类没有实现该监听器，那么Customer对象放入或者删除session时，不会触发bind和unbind事件</span><br><span class="line"></span><br><span class="line">    - HttpSessionIdListener（不常用）</span><br><span class="line"></span><br><span class="line">      - 当session的id发生变化时，监听器中的一个方法会被调用。</span><br><span class="line"></span><br><span class="line">    - HttpSessionActivationListener（不常用）</span><br><span class="line"></span><br><span class="line">      - 监听session对象的钝化（session对象从内存到硬盘文件）与活化（从硬盘文件把session恢复到内存）</span><br><span class="line"></span><br><span class="line">- 可以使用监听器（HttpSessionBindingListener）实现实时更新网站在线人数的操作</span><br><span class="line"></span><br><span class="line">  - ```java</span><br><span class="line">    package com.niu.oa.bean;</span><br><span class="line">    </span><br><span class="line">    import jakarta.servlet.ServletContext;</span><br><span class="line">    import jakarta.servlet.http.HttpSessionBindingEvent;</span><br><span class="line">    import jakarta.servlet.http.HttpSessionBindingListener;</span><br><span class="line">    </span><br><span class="line">    import java.util.Objects;</span><br><span class="line">    </span><br><span class="line">    public class User implements HttpSessionBindingListener &#123;</span><br><span class="line">        @Override</span><br><span class="line">        public void valueBound(HttpSessionBindingEvent event) &#123;</span><br><span class="line">            //用户登录了</span><br><span class="line">            //User类型的对象往session中存放了</span><br><span class="line">            //获取ServletContext对象，对于一个webapp来说，ServletContext对象只有一个，且在服务器关闭时销毁</span><br><span class="line">            //request（请求域 请求级 HttpServletRequest）&lt;session（会话域 用户级 HttpSession）&lt;application（应用域 项目级 ServletContext）</span><br><span class="line">            ServletContext application = event.getSession().getServletContext();</span><br><span class="line">            //获取在线人数</span><br><span class="line">            Object onlinecount = application.getAttribute(&quot;onlinecount&quot;);</span><br><span class="line">            if (onlinecount == null)&#123;</span><br><span class="line">                application.setAttribute(&quot;onlinecount&quot;, 1);</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                int count = (Integer)onlinecount;</span><br><span class="line">                count++;</span><br><span class="line">                application.setAttribute(&quot;onlinecount&quot;, count);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        @Override</span><br><span class="line">        public void valueUnbound(HttpSessionBindingEvent event) &#123;</span><br><span class="line">            //用户退出了</span><br><span class="line">            //User类型的对象从session域中被删除了</span><br><span class="line">            ServletContext application = event.getSession().getServletContext();</span><br><span class="line">            Integer onlinecount = (Integer)application.getAttribute(&quot;onlinecount&quot;);</span><br><span class="line">            onlinecount--;</span><br><span class="line">            application.setAttribute(&quot;onlinecount&quot;, onlinecount);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul></li><li><p>再在用户登录成功的情况下，创建用户对象并放到session作用域即可</p><ul><li><pre><code class="java">if (success)&#123;            User user = new User();            user.setUsername(username);            user.setPassword(password);                //获取session对象，必须获取到session            HttpSession session = req.getSession();            session.setAttribute(&quot;user&quot;, user);&#125;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- jsp界面作显示(注意在线人数是放在最大的作用域，也就是应用作用域)</span><br><span class="line"></span><br><span class="line">  - ```jsp</span><br><span class="line">    &lt;h3&gt;欢迎$&#123;sessionscope.username&#125;,在线人数$&#123;applicationScope.onlinecount&#125;&lt;/h3&gt;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul></li></ul><h1 id="😀总结一下四大作用域"><a href="#😀总结一下四大作用域" class="headerlink" title="😀总结一下四大作用域"></a>😀总结一下四大作用域</h1><p>这四大作用域的作用范围从小到大排列如下：</p><ul><li><p><strong>页面作用域（Page Scope）pageContext</strong>：数据存储范围仅在当前的JSP页面中有效，不同页面之间的数据是隔离的。</p></li><li><p>**请求作用域（Request Scope）HttpServletRequest **：数据存储范围仅在一次HTTP请求过程中有效。request</p></li><li><p><strong>会话作用域（Session Scope）HttpSession</strong>：数据存储范围在用户的整个会话期间有效，跨多个请求。session</p></li><li><p><strong>应用作用域（Application Scope）ServletContext</strong>：数据存储范围在整个Web应用程序中有效，对所有用户和会话可见。application</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JDBCStudy</title>
      <link href="/2023/09/06/JDBCStudy/"/>
      <url>/2023/09/06/JDBCStudy/</url>
      
        <content type="html"><![CDATA[<h1 id="JDBC是由sun公司定义的一个规则（接口interface）"><a href="#JDBC是由sun公司定义的一个规则（接口interface）" class="headerlink" title="JDBC是由sun公司定义的一个规则（接口interface）"></a><strong>JDBC是由sun公司定义的一个规则（接口interface）</strong></h1><p>这个过程中有三个参与角色</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">java程序员：面向接口写代码(想办法通过JDBC去调用数据库厂商实现类的方法)</span><br><span class="line">sun公司：负责制定这套JDBC接口</span><br><span class="line">数据库厂商：负责编写JDBC接口的实现类(驱动)</span><br></pre></td></tr></table></figure><p>java程序员</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bjpowernode.javaweb.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ResourceBundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// JDBC jdbc = new MySQL();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建对象可以通过反射机制</span></span><br><span class="line">        <span class="type">ResourceBundle</span> <span class="variable">bundle</span> <span class="operator">=</span> ResourceBundle.getBundle(<span class="string">&quot;Jdbc&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> bundle.getString(<span class="string">&quot;classname&quot;</span>);</span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> Class.forName(className);</span><br><span class="line">        <span class="comment">//在java1.9版本中，newInstance()已经被弃用，被取代为下面这种方法</span></span><br><span class="line">        <span class="type">JDBC</span> <span class="variable">jdbc</span> <span class="operator">=</span> (JDBC)c.getDeclaredConstructor().newInstance();</span><br><span class="line"></span><br><span class="line">        jdbc.getConnetion();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sun公司</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">JDBC</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    连接数据库的方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">getConnection</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数据库厂商：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SqlServer</span> implenments JDBC&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getConnection</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;连接SqlServer数据库成功！&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JDBC编程六步"><a href="#JDBC编程六步" class="headerlink" title="JDBC编程六步"></a><strong>JDBC编程六步</strong></h1><ol><li>注册驱动(告诉Java程序要连接哪个品牌的数据库)</li><li>获取连接(表示JVM的进程和数据库进程之间的通道打开了，这属于进程之间的通信)</li><li>获取数据库操作对象(专门执行sql语句的对象)</li><li>执行sql语句(DQL,DML)</li><li>处理查询结果集(只有第四步是select语句时进行这一步)</li><li>释放资源(这个通道一定要关闭)</li></ol><p>具体实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bjpowernode.javaweb.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test01</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//这里因为最后要在finally中关闭，所以要把这两个在try块外定义（作用域）</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1、注册驱动</span></span><br><span class="line">            <span class="type">Driver</span> <span class="variable">driver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">com</span>.mysql.cj.jdbc.Driver();<span class="comment">//多态，父类型指向子类型对象</span></span><br><span class="line">            DriverManager.registerDriver(driver);</span><br><span class="line"></span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">                url:统一资源定位符（网络中某个资源的绝对路径）</span></span><br><span class="line"><span class="comment">                https://www.baidu.com/这就是url</span></span><br><span class="line"><span class="comment">                url的组成：</span></span><br><span class="line"><span class="comment">                    协议</span></span><br><span class="line"><span class="comment">                    IP</span></span><br><span class="line"><span class="comment">                    PORT(端口)</span></span><br><span class="line"><span class="comment">                    资源名</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                http://182.61.200.7:80/index.html</span></span><br><span class="line"><span class="comment">                    http://通信协议</span></span><br><span class="line"><span class="comment">                    182.61.200.7:80IP地址</span></span><br><span class="line"><span class="comment">                    80 服务器上软件的端口</span></span><br><span class="line"><span class="comment">                    index.html是服务器上某个资源名</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                jdbc:mysql://127.0.0.1:3306/bjpowernode</span></span><br><span class="line"><span class="comment">                    jdbc:mysql://协议</span></span><br><span class="line"><span class="comment">                    127.0.0.1 IP 地址</span></span><br><span class="line"><span class="comment">                    3306 mysql数据库端口号</span></span><br><span class="line"><span class="comment">                    bjpowernode 具体的数据库实例名</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                注：localhost和127.0.0.1都是本机IP地址</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                通信协议：</span></span><br><span class="line"><span class="comment">                    通信协议是通信之前就提前定好的数据传输格式。</span></span><br><span class="line"><span class="comment">                    数据包具体怎么传输数据，格式提前定好的。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="comment">//2、获取连接</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://127.0.0.1:3306/bjpowernode&quot;</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">            conn = DriverManager.getConnection(url, user, password);</span><br><span class="line">            <span class="comment">//实际上这里调用方法的操作，就是new了一个mysql数据库连接</span></span><br><span class="line">            System.out.println(<span class="string">&quot;数据库连接对象：&quot;</span>+conn);</span><br><span class="line">            <span class="comment">//输出结果即com.mysql.jdbc.JDBC4Connection@41cf53f9</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//3、获取数据库操作对象(statement专门用来专门执行sql语句的)，以后就专门操作stmt了</span></span><br><span class="line">            stmt = conn.createStatement();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//4、执行sql语句</span></span><br><span class="line">            <span class="comment">//JDBC中的sql语句不需要写分号</span></span><br><span class="line">            <span class="comment">//&quot;delete from dept where deptno = 40&quot;;</span></span><br><span class="line">            <span class="comment">//&quot;update dept set dname = &#x27;销售部&#x27;,loc = &#x27;天津&#x27;, where deptno = 20&quot;;</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;delete from dept where deptno = 40&quot;</span>;</span><br><span class="line">            <span class="comment">//专门执行DML语句的（insert delete update）</span></span><br><span class="line">            <span class="comment">//返回值是“影响数据库中的记录条数”</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> stmt.executeUpdate(sql);</span><br><span class="line">            System.out.println(count == <span class="number">1</span>?<span class="string">&quot;保存成功&quot;</span>:<span class="string">&quot;保存失败&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//6、释放资源</span></span><br><span class="line">            <span class="comment">//遵循从小到大依次关闭，分别对其try...catch</span></span><br><span class="line">            <span class="keyword">if</span> (stmt != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    stmt.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (conn != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简化（标准）后</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bjpowernode.javaweb.servlet;</span><br><span class="line"><span class="comment">//把配置信息写到一个配置文件properties中</span></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ResourceBundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//使用资源绑定器绑定属性配置文件</span></span><br><span class="line">        <span class="type">ResourceBundle</span> <span class="variable">bundle</span> <span class="operator">=</span> ResourceBundle.getBundle(<span class="string">&quot;jdbc.properties&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">driver</span> <span class="operator">=</span> bundle.getString(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> bundle.getString(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> bundle.getString(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> bundle.getString(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">//1、注册驱动</span></span><br><span class="line">            <span class="comment">//DriverManager.registerDriver(new com.mysql.jdbc.Driver());</span></span><br><span class="line"><span class="comment">//            driver = com.mysql.jdbc.Driver;</span></span><br><span class="line">            Class.forName(driver);</span><br><span class="line">            <span class="comment">//2、获取连接</span></span><br><span class="line"><span class="comment">//            String url = &quot;jdbc:mysql://localhost:3306/bjpowernode&quot;;</span></span><br><span class="line"><span class="comment">//            String user = &quot;root&quot;;</span></span><br><span class="line"><span class="comment">//            String password = &quot;123456&quot;;</span></span><br><span class="line">            conn = DriverManager.getConnection(url,user,password);</span><br><span class="line">            <span class="comment">//3、获取数据库操作对象</span></span><br><span class="line">            stmt = conn.createStatement();</span><br><span class="line">            <span class="comment">//4、执行sql语句</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update dept set dname = &#x27;销售部&#x27;,loc = &#x27;天津&#x27; where deptno = 20&quot;</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> stmt.executeUpdate(sql);</span><br><span class="line">            System.out.println(count == <span class="number">1</span>?<span class="string">&quot;删除成功&quot;</span>:<span class="string">&quot;删除失败&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(SQLException | ClassNotFoundException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(stmt != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    stmt.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(conn !=<span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    conn.close();</span><br><span class="line">                &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>简化后的properties配置文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">mysql://192.168.151.9:3306/bjpowercode</span></span><br><span class="line"><span class="attr">user</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
